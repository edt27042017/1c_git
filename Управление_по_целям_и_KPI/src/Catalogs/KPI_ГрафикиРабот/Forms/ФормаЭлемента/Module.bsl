&НаКлиенте
Перем ГодЧисло, ПК;

&НаКлиенте
Функция РезультатПодтверждения()
	
	Ответ = Вопрос("Информация о рабочих часах в табличной части будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание");
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Элементы.СтраницыПараметровЗаполненияГрафика.ТекущаяСтраница = Элементы.СтраницаПроизводственныйКалендарь 
		И Не ЗначениеЗаполнено(Объект.ПроизводственныйКалендарь) Тогда
		Сообщить("Не выбран производственный календарь");
		Возврат;
	ИначеЕсли Элементы.СтраницыПараметровЗаполненияГрафика.ТекущаяСтраница = Элементы.СтраницыПараметровЗаполненияГрафика 
		И Не ЗначениеЗаполнено(Объект.ФормулаГрафика) Тогда
		Сообщить("Не выбран производственный календарь");
		Возврат;
	КонецЕсли;
	
	Если РезультатПодтверждения() Тогда
		ЗаполнитьДанныеГрафика();
	Иначе 
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеГрафика()
	
	График = РеквизитФормыВЗначение("Объект");
	График.ЗаполнитьДанныеГрафика(ЭтаФорма.ЗаполнитьГрафикНачалоПериода);
	ЗначениеВРеквизитФормы(График,"Объект");
	РаскраситьТабличнуюЧасть();
		
КонецПроцедуры

&НаСервере
Процедура РаскраситьТабличнуюЧасть()
		
	УсловноеОформление.Элементы.Очистить();
	Выходной        = Перечисления.KPI_ВидыДнейГрафика.Выходной;
	Праздник        = Перечисления.KPI_ВидыДнейГрафика.Праздник;
	Предпраздничный = Перечисления.KPI_ВидыДнейГрафика.Предпраздничный;
	Для Каждого Стр из Объект.ДанныеГрафика Цикл
		
		ЭлементУсловногоОформленияВыходной = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформленияВыходной.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоРозовый);
		ЭлементУсловногоОформленияВыходной.Использование = Истина;
		
		ЭлементУсловногоОформленияПраздник = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформленияПраздник.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Розовый);
		ЭлементУсловногоОформленияПраздник.Использование = Истина;
		
		ЭлементУсловногоОформленияПредпраздничный = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформленияПредпраздничный.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Белый);
		ЭлементУсловногоОформленияПредпраздничный.Использование = Истина;
		
		
		
		ЭлементОтбораВыходной = ЭлементУсловногоОформленияВыходной.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораВыходной.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ДанныеГрафика.Месяц");
		ЭлементОтбораВыходной.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораВыходной.ПравоеЗначение = НачалоМесяца(Стр.Месяц);
		ЭлементОтбораВыходной.Использование = Истина;
		
		ЭлементОтбораПраздник = ЭлементУсловногоОформленияПраздник.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораПраздник.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ДанныеГрафика.Месяц");
		ЭлементОтбораПраздник.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораПраздник.ПравоеЗначение = НачалоМесяца(Стр.Месяц);
		ЭлементОтбораПраздник.Использование = Истина;
		
		ЭлементОтбораПредпраздничный = ЭлементУсловногоОформленияПредпраздничный.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораПредпраздничный.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ДанныеГрафика.Месяц");
		ЭлементОтбораПредпраздничный.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораПредпраздничный.ПравоеЗначение = НачалоМесяца(Стр.Месяц);
		ЭлементОтбораПредпраздничный.Использование = Истина;
		
		
		СтрокаМесяц = Объект.ДанныеГрафика.Получить(Месяц(Стр.Месяц)-1);
		Для НомерДня = 1 ПО 31 Цикл
			
			Если СтрокаМесяц["ВидДня"+НомерДня] = Выходной Тогда  
				ОформляемоеПолеВыходной = ЭлементУсловногоОформленияВыходной.Поля.Элементы.Добавить();
				ОформляемоеПолеВыходной.Поле = Новый ПолеКомпоновкиДанных("ДанныеГрафикаЧасов"+НомерДня);
				ОформляемоеПолеВыходной.Использование = Истина;
			ИначеЕсли СтрокаМесяц["ВидДня"+НомерДня] = Праздник Тогда 
				ОформляемоеПолеПраздник = ЭлементУсловногоОформленияПраздник.Поля.Элементы.Добавить();
				ОформляемоеПолеПраздник.Поле = Новый ПолеКомпоновкиДанных("ДанныеГрафикаЧасов"+НомерДня);
				ОформляемоеПолеПраздник.Использование = Истина;
			ИначеЕсли СтрокаМесяц["ВидДня"+НомерДня] = Предпраздничный Тогда 
				ОформляемоеПолеПредпраздничный = ЭлементУсловногоОформленияПредпраздничный.Поля.Элементы.Добавить();
				ОформляемоеПолеПредпраздничный.Поле = Новый ПолеКомпоновкиДанных("ДанныеГрафикаЧасов"+НомерДня);
				ОформляемоеПолеПредпраздничный.Использование = Истина;	
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеГрафикаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеГрафикаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.ДанныеГрафика.Количество() = 0 Тогда
		Объект.Год = Год(ТекущаяДата());
		ПерезаполнитьСтрокиМесяцев(Объект.Год);
	КонецЕсли;
	
	Элементы.ПроизводственныйКалендарь.ОграничениеТипа.Типы().Очистить();
	Если KPI_ПереопределяемыйСервер.ИнтегрированныйФункционал() Тогда
		ТипПроизводственогоКалендаря = Новый ОписаниеТипов(KPI_ПереопределяемыйСервер.ТипСправочникаПроизводственныйКалендарь());
		Элементы.ПроизводственныйКалендарь.ОграничениеТипа = ТипПроизводственогоКалендаря;
		Элементы.СтраницыПараметровЗаполненияГрафика.ТекущаяСтраница = Элементы.СтраницаПроизводственныйКалендарь;
	Иначе
		Элементы.СтраницыПараметровЗаполненияГрафика.ТекущаяСтраница = Элементы.СтраницаПараметрыГрафика;
	КонецЕсли;
	
	РаскраситьТабличнуюЧасть();
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьСтрокиМесяцев(Год)
	
	Объект.ДанныеГрафика.Очистить();
	
	Для м = 1 По 12 Цикл
		НовСтр = Объект.ДанныеГрафика.Добавить();
		НовСтр.Месяц = Дата(Объект.Год, м, 1);
	КонецЦикла;
	
	РаскраситьТабличнуюЧасть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииГода()
	
	ГодЧисло = Объект.Год;
	
	Если РезультатПодтверждения() Тогда
		Объект.Год = Число(ЭтаФорма.Элементы.Год.ТекстРедактирования);
		ПерезаполнитьСтрокиМесяцев(Объект.Год);
	Иначе 
		Объект.Год = ГодЧисло;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры  

&НаКлиенте
Процедура ГодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ПриИзмененииГода();
КонецПроцедуры

&НаКлиенте
Процедура ДанныеГрафикаПередНачаломИзменения(Элемент, Отказ)
	
	Попытка
		ТестДата = Дата(Объект.Год, Месяц(Элемент.ТекущиеДанные.Месяц), Число(Элемент.ТекущийЭлемент.Заголовок));
	Исключение
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеГрафикаПриИзменении(Элемент)
	сумм = 0;
	колво = 0;
	
	Для д = 1 По 31 Цикл
		ТекЧасов = Элемент.ТекущиеДанные["Часов" + д];
		
		сумм = сумм + ТекЧасов;
		
		Если ТекЧасов > 0 Тогда
			колво = колво + 1;
		КонецЕсли;
	КонецЦикла;
	
	Элемент.ТекущиеДанные.ИтогоЧасов = сумм;
	Элемент.ТекущиеДанные.ИтогоДней = колво;
КонецПроцедуры

&НаКлиенте
Процедура ПроизводственныйКалендарьПриИзменении(Элемент)
	
	Если РезультатПодтверждения() Тогда
		ПерезаполнитьСтрокиМесяцев(Объект.Год);
		ПК = Объект.ПроизводственныйКалендарь;
	Иначе
		Объект.ПроизводственныйКалендарь = ПК;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ГодЧисло = Объект.Год;
	ПК = Объект.ПроизводственныйКалендарь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводственныйКалендарьОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.ПроизводственныйКалендарь) = Тип("Число") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Год",Объект.ПроизводственныйКалендарь);
		ОткрытьФорму("РегистрСведений.KPI_ГрафикиРабот.Форма.ПраздничныеДни",ПараметрыОткрытия);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДанныеГрафикаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДанныеГрафика.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРеквизитаВидДня = "ВидДня" + СтрЗаменить(Поле.Имя,"ДанныеГрафикаЧасов","");
	ТекущийВидДня = ТекущиеДанные[ИмяРеквизитаВидДня];	
	
	ВидыДней = ВидыДнейГрафика();
	ВыбранныйВидДня = ВидыДней.ВыбратьЭлемент("Виды дней графика",ВидыДней.НайтиПоЗначению(ТекущийВидДня));
	Если НЕ ВыбранныйВидДня = Неопределено Тогда
		 ТекущиеДанные[ИмяРеквизитаВидДня] = ВыбранныйВидДня.Значение;
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидыДнейГрафика()
	
	ВидыДней = Новый СписокЗначений;
	ВидыДней.Добавить(Перечисления.KPI_ВидыДнейГрафика.Выходной,"Выходной");
	ВидыДней.Добавить(Перечисления.KPI_ВидыДнейГрафика.Праздник,"Праздничный");
	ВидыДней.Добавить(Перечисления.KPI_ВидыДнейГрафика.Предпраздничный,"Предпраздничный");
	ВидыДней.Добавить(Перечисления.KPI_ВидыДнейГрафика.Рабочий,"Рабочий");	
	
	Возврат ВидыДней;
	
КонецФункции


