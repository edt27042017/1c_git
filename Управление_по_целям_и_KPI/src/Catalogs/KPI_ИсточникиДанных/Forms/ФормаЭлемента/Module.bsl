&НаКлиенте
Перем СтруктураПараметров, Конструктор;


&НаКлиенте
Процедура Проверить(Команда)
	СтруктураПараметров = ПолучитьПараметрыСпр(Объект.ИБ);
	
	KPI_ОбщегоНазначения.ПроверитьСоединение(СтруктураПараметров);
КонецПроцедуры


&НаСервере
Функция ПолучитьПараметрыСпр(Ссылка)
	ОбъектСпр = Ссылка.ПолучитьОбъект();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВерсияПлатформы", ОбъектСпр.ВерсияПлатформы);
	СтруктураПараметров.Вставить("ТипИБ", ОбъектСпр.ТипИБ);
	СтруктураПараметров.Вставить("КаталогИБ", ОбъектСпр.КаталогИБ);
	СтруктураПараметров.Вставить("ИмяСервераИБ", ОбъектСпр.ИмяСервераИБ);
	СтруктураПараметров.Вставить("ИмяИБНаСервере", ОбъектСпр.ИмяИБНаСервере);
	СтруктураПараметров.Вставить("АутентификацияWindows", ОбъектСпр.АутентификацияWindows);
	СтруктураПараметров.Вставить("ПользовательИБ", ОбъектСпр.ПользовательИБ);
	СтруктураПараметров.Вставить("ПарольИБ", ОбъектСпр.ПарольИБ);
	
	Возврат СтруктураПараметров;
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ИБ = ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ");
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
КонецПроцедуры


&НаКлиенте
Процедура ИБПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Если Объект.ИБ = Справочники.KPI_ИнформационныеБазы.ТекущаяИБ Тогда
		Элементы.Проверить.Доступность = Ложь;
		Элементы.Сотрудник.Видимость = Истина;
		Элементы.ФизЛицо.Видимость = Ложь;
		Элементы.КодФизЛица.Видимость = Ложь;
	Иначе
		Элементы.Проверить.Доступность = Истина;
		Элементы.Сотрудник.Видимость = Ложь;
		Элементы.ФизЛицо.Видимость = Истина;
		Элементы.КодФизЛица.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Редактор(Команда)
	#Если ТонкийКлиент ИЛИ ВебКлиент Тогда
		Предупреждение("Для интерактивного редактирования текста запроса необходимо запустить приложение 1С:Предприятия в толстом клиенте");
		Возврат;
	#Иначе
		Если Объект.ИБ = ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ") Тогда
			Конструктор = Новый КонструкторЗапроса;
		Иначе
			СтруктураПараметров = ПолучитьПараметрыСпр(Объект.ИБ);
			COM_Объект = KPI_ОбщегоНазначения.ПолучитьОбъектВнешнегоСоединения(СтруктураПараметров);
			Если COM_Объект <> Неопределено Тогда
				Состояние("Выполняется попытка подключения к базе данных...");
				COM_Подключение = COM_Объект.Connect(KPI_ОбщегоНазначения.ПолучитьСтрокуПодключения(СтруктураПараметров));
				Конструктор = COM_Объект.NewObject("КонструкторЗапроса");
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(Объект.ТекстЗапроса) Тогда 
			Конструктор.Текст = Объект.ТекстЗапроса;
		КонецЕсли;
		
		Состояние(Неопределено);
		
		Если Конструктор.ОткрытьМодально() Тогда 
			Объект.ТекстЗапроса = Конструктор.Текст;
		КонецЕсли;
		
		Если Объект.ИБ <> ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ") Тогда
			COM_Подключение = Неопределено;
			COM_Объект.ЗавершитьРаботуСистемы(Ложь);
			COM_Объект = Неопределено;
		КонецЕсли;
		
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактирование(Команда)
	Если ПустаяСтрока(Объект.ТекстЗапроса) Тогда 
		Возврат;
	КонецЕсли;
	
	
	#Если ТонкийКлиент ИЛИ ВебКлиент Тогда
		Предупреждение("Для создания запроса к базе данных необходимо запустить приложение 1С:Предприятия в толстом клиенте");
		Возврат;
	#Иначе
		Объект.Параметры.Очистить();
		Объект.Ресурсы.Очистить();
		Объект.Сотрудник = "";
		Объект.ФизЛицо = "";
		Объект.КодФизЛица = "";
		Объект.Период = "";
		Объект.Аналитика1 = "";
		Объект.Аналитика2 = "";
		Объект.Аналитика3 = "";
		Объект.Аналитика4 = "";
		Объект.Аналитика5 = "";
		Объект.ФормулаФакта = "";
		Объект.ДатаНачала = "";
		Объект.ДатаОкончания = "";
		

		
		Если Объект.ИБ = ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ") Тогда
			Запрос = Новый Запрос;
			Построитель = Новый ПостроительОтчета;
		Иначе
			СтруктураПараметров = ПолучитьПараметрыСпр(Объект.ИБ);
			COM_Объект = KPI_ОбщегоНазначения.ПолучитьОбъектВнешнегоСоединения(СтруктураПараметров);
			Если COM_Объект <> Неопределено Тогда
				Состояние("Выполняется попытка подключения к базе данных...");
				COM_Подключение = COM_Объект.Connect(KPI_ОбщегоНазначения.ПолучитьСтрокуПодключения(СтруктураПараметров));
				Запрос = COM_Объект.NewObject("Запрос");
				Построитель = COM_Объект.NewObject("ПостроительОтчета");
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Состояние(Неопределено);
		
		
		Запрос.Текст = Объект.ТекстЗапроса;
		ОписаниеПараметров = Запрос.НайтиПараметры();
		
		ТЗПараметрыЗапроса = Новый ТаблицаЗначений;
		ТЗПараметрыЗапроса.Колонки.Добавить("ИмяПараметра");
		ТЗПараметрыЗапроса.Колонки.Добавить("ТипПараметра");
		
		Для каждого Стр Из ОписаниеПараметров Цикл
			НовСтр = ТЗПараметрыЗапроса.Добавить();
			НовСтр.ИмяПараметра = Стр.Имя;
			
			ВыбранноеЗначение = Неопределено; 
			ВыбранноеЗначение = Стр.ТипЗначения.ПривестиЗначение(ВыбранноеЗначение);
			
			Если Объект.ИБ = ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ") Тогда
				Если Метаданные.НайтиПоТипу(ТипЗнч(ВыбранноеЗначение)) <> Неопределено  Тогда
					НовСтр.ТипПараметра = СтрЗаменить(Метаданные.НайтиПоТипу(ТипЗнч(ВыбранноеЗначение)).ПолноеИмя(), ".", "Ссылка.");
				Иначе
					НовСтр.ТипПараметра = Строка(ТипЗнч(ВыбранноеЗначение));
				КонецЕсли;
			Иначе 
				НовСтр.ТипПараметра = "";
			КонецЕсли;
		КонецЦикла;
		
		Объект.ПараметрыЗапроса = ЗначениеВСтрокуВнутр(ТЗПараметрыЗапроса);
		
		ЗаполнитьТаблицуПараметров(Объект.ПараметрыЗапроса);
		
		
		Построитель.Текст = Объект.ТекстЗапроса;
		Построитель.ЗаполнитьНастройки();
		//Построитель.Выполнить();
		
		СписокПолей = Новый СписокЗначений;
		Для каждого Поле Из Построитель.ВыбранныеПоля Цикл
			Если Лев(Поле.Имя, 2) = "Р_" Или Лев(Поле.Имя, 2) = "р_" Тогда
				НовСтр = Объект.Ресурсы.Добавить();
				НовСтр.ИмяРесурса = Поле.Имя;
			    НовСтр.Представление = Прав(Поле.Имя, СтрДлина(Поле.Имя) - 2);
			Иначе 
				СписокПолей.Добавить(Поле.Имя);
			КонецЕсли;
		КонецЦикла;
		
		Объект.ПоляРесурсов = ЗначениеВСтрокуВнутр(СписокПолей);
		
		
		Запрос = Неопределено;
		Построитель = Неопределено;
		
		Если Объект.ИБ <> ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ") Тогда
			COM_Подключение = Неопределено;
			COM_Объект.ЗавершитьРаботуСистемы(Ложь);
			COM_Объект = Неопределено;
		КонецЕсли;
		
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуПараметров(СтрПараметры)
	#Если ТонкийКлиент ИЛИ ВебКлиент Тогда
		Предупреждение("Для заполнения таблицы параметров необходимо запустить приложение 1С:Предприятия в толстом клиенте");
		Возврат;
	#Иначе
		ТЗ = ЗначениеИзСтрокиВнутр(СтрПараметры);
		
		Объект.Параметры.Очистить();
		
		Для каждого Стр Из ТЗ Цикл
			Если Стр.ИмяПараметра <> Объект.ДатаНачала И Стр.ИмяПараметра <> Объект.ДатаОкончания Тогда 
				НовСтр = Объект.Параметры.Добавить();
				НовСтр.ИмяПараметра = Стр.ИмяПараметра;
				НовСтр.ТипПараметра = Стр.ТипПараметра;
			КонецЕсли;
		КонецЦикла;
	#КонецЕсли
КонецПроцедуры


&НаКлиенте
Процедура ПараметрыТипПараметраОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	#Если ТонкийКлиент ИЛИ ВебКлиент Тогда
		Предупреждение("Для изменения типа необходимо запустить приложение 1С:Предприятия в толстом клиенте");
		СтандартнаяОбработка = Ложь;
	#Иначе
		Если Метаданные.НайтиПоТипу(ВыбранноеЗначение) <> Неопределено Тогда
			Если Объект.ИБ = ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ") Тогда
				ТекущийЭлемент.ТекущиеДанные.ТипПараметра = СтрЗаменить(Метаданные.НайтиПоТипу(ВыбранноеЗначение).ПолноеИмя(), ".", "Ссылка.");
			Иначе 
				Сообщить("Для внешней информационной базы можно выбрать только примитивные типы");
				ТекущийЭлемент.ТекущиеДанные.ТипПараметра = "";
			КонецЕсли;
		Иначе
			ТекущийЭлемент.ТекущиеДанные.ТипПараметра = ВыбранноеЗначение;
		КонецЕсли;
		
		
		ТЗ = ЗначениеИзСтрокиВнутр(Объект.ПараметрыЗапроса);
		
		Для каждого Стр Из ТЗ Цикл
			Если Элементы.Параметры.ТекущиеДанные.ИмяПараметра = Стр.ИмяПараметра Тогда
				Стр.ТипПараметра = Элементы.Параметры.ТекущиеДанные.ТипПараметра;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Объект.ПараметрыЗапроса = ЗначениеВСтрокуВнутр(ТЗ);
		
		
		СтандартнаяОбработка = Ложь;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыТипПараметраНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущийЭлемент.ТекущиеДанные.ТипПараметра = "Строка";
КонецПроцедуры


&НаКлиенте
Процедура НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, Реквизит)
	#Если ТонкийКлиент ИЛИ ВебКлиент Тогда
		Предупреждение("Для выбора сопоставления полей необходимо запустить приложение 1С:Предприятия в толстом клиенте");
		СтандартнаяОбработка = Ложь;
	#Иначе
		СтандартнаяОбработка = Ложь;
		
		СЗ = ЗначениеИзСтрокиВнутр(Объект.ПоляРесурсов);
		
		н = 0;
		Пока н < СЗ.Количество() Цикл
			Если Объект.Сотрудник = СЗ.Получить(н).Значение
				Или Объект.ФизЛицо    = СЗ.Получить(н).Значение
				Или Объект.КодФизЛица = СЗ.Получить(н).Значение
				Или Объект.Период     = СЗ.Получить(н).Значение
				Или Объект.Аналитика1 = СЗ.Получить(н).Значение
				Или Объект.Аналитика2 = СЗ.Получить(н).Значение
				Или Объект.Аналитика3 = СЗ.Получить(н).Значение
				Или Объект.Аналитика4 = СЗ.Получить(н).Значение
				Или Объект.Аналитика5 = СЗ.Получить(н).Значение
				Тогда
				СЗ.Удалить(н);
			Иначе 
				н = н + 1;	
			КонецЕсли;
		КонецЦикла;
		
		Форма = ПолучитьФорму("Справочник.KPI_ИсточникиДанных.Форма.ФормаВыбораПоля", Новый Структура("СЗ, Реквизит", СЗ, Реквизит), ЭтаФорма);
		Форма.Открыть();
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура СотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "Сотрудник");
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "ФизЛицо");
КонецПроцедуры

&НаКлиенте
Процедура КодФизЛицаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "КодФизЛица");
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "Период");
КонецПроцедуры

&НаКлиенте
Процедура Аналитика1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "Аналитика1");
КонецПроцедуры

&НаКлиенте
Процедура Аналитика2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "Аналитика2");
КонецПроцедуры

&НаКлиенте
Процедура Аналитика3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "Аналитика3");
КонецПроцедуры

&НаКлиенте
Процедура Аналитика4НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "Аналитика4");
КонецПроцедуры

&НаКлиенте
Процедура Аналитика5НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНеЧисловогоРесурса(СтандартнаяОбработка, "Аналитика5");
КонецПроцедуры


&НаКлиенте
Процедура НачалоВыбораПараметраДаты(СтандартнаяОбработка, Реквизит)
	
	#Если ТонкийКлиент ИЛИ ВебКлиент Тогда
		Предупреждение("Для выбора сопоставления параметров необходимо запустить приложение 1С:Предприятия в толстом клиенте");
		СтандартнаяОбработка = Ложь;
	#Иначе
		СтандартнаяОбработка = Ложь;
		
		СЗ = Новый СписокЗначений;
		Для каждого Стр Из ЗначениеИзСтрокиВнутр(Объект.ПараметрыЗапроса) Цикл
			Если Объект.ДатаНачала <> Стр.ИмяПараметра И Объект.ДатаОкончания <> Стр.ИмяПараметра Тогда 
				СЗ.Добавить(Стр.ИмяПараметра);
			КонецЕсли;
		КонецЦикла;
		
		Форма = ПолучитьФорму("Справочник.KPI_ИсточникиДанных.Форма.ФормаВыбораПоля", Новый Структура("СЗ, Реквизит", СЗ, Реквизит), ЭтаФорма);
		Форма.Открыть();
	#КонецЕсли
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаНачалаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораПараметраДаты(СтандартнаяОбработка, "ДатаНачала");
КонецПроцедуры


&НаКлиенте
Процедура ДатаОкончанияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораПараметраДаты(СтандартнаяОбработка, "ДатаОкончания");
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ВыбранноеЗначение.Реквизит = "Сотрудник" Тогда
		Объект.Сотрудник = ВыбранноеЗначение.ЗначениеРеквизита;
	ИначеЕсли ВыбранноеЗначение.Реквизит = "ФизЛицо" Тогда
		Объект.ФизЛицо = ВыбранноеЗначение.ЗначениеРеквизита;
	ИначеЕсли ВыбранноеЗначение.Реквизит = "КодФизЛица" Тогда
		Объект.КодФизЛица = ВыбранноеЗначение.ЗначениеРеквизита;
	ИначеЕсли ВыбранноеЗначение.Реквизит = "Период" Тогда
		Объект.Период = ВыбранноеЗначение.ЗначениеРеквизита;
	ИначеЕсли ВыбранноеЗначение.Реквизит = "Аналитика1" Тогда
		Объект.Аналитика1 = ВыбранноеЗначение.ЗначениеРеквизита;
	ИначеЕсли ВыбранноеЗначение.Реквизит = "Аналитика2" Тогда
		Объект.Аналитика2 = ВыбранноеЗначение.ЗначениеРеквизита;
	ИначеЕсли ВыбранноеЗначение.Реквизит = "Аналитика3" Тогда
		Объект.Аналитика3 = ВыбранноеЗначение.ЗначениеРеквизита;
	ИначеЕсли ВыбранноеЗначение.Реквизит = "Аналитика4" Тогда
		Объект.Аналитика4 = ВыбранноеЗначение.ЗначениеРеквизита;
	ИначеЕсли ВыбранноеЗначение.Реквизит = "Аналитика5" Тогда
		Объект.Аналитика5 = ВыбранноеЗначение.ЗначениеРеквизита;
		
	ИначеЕсли ВыбранноеЗначение.Реквизит = "ДатаНачала" Тогда
		Объект.ДатаНачала = ВыбранноеЗначение.ЗначениеРеквизита;
		ЗаполнитьТаблицуПараметров(Объект.ПараметрыЗапроса);
	ИначеЕсли ВыбранноеЗначение.Реквизит = "ДатаОкончания" Тогда
		Объект.ДатаОкончания = ВыбранноеЗначение.ЗначениеРеквизита;
		ЗаполнитьТаблицуПараметров(Объект.ПараметрыЗапроса);
		
	ИначеЕсли ВыбранноеЗначение.Реквизит = "Формула" Тогда
		Объект.ФормулаФакта = ВыбранноеЗначение.ЗначениеРеквизита;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СсылкаРедактироватьФормулуНажатие(Элемент)
	СЗ = Новый СписокЗначений;
	Для каждого Стр Из Объект.Ресурсы Цикл
		СЗ.Добавить(Стр.Представление);
	КонецЦикла;
	
	Форма = ПолучитьФорму("Справочник.KPI_ИсточникиДанных.Форма.ФормаРедакторФормулы", Новый Структура("СЗ, Формула", СЗ, Объект.ФормулаФакта), ЭтаФорма);	
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура РесурсыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Найти(Объект.ФормулаФакта, "[" + Элемент.ТекущиеДанные.Представление + "]") <> 0 И Поле.Имя = "РесурсыПредставление" Тогда 
		Сообщить("Нельзя изменять представление ресурса, если оно присутствует в формуле расчета факта");
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ЗаполнитьТаблицуПараметров(Объект.ПараметрыЗапроса);
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ЗаполнитьТаблицуПараметров(Объект.ПараметрыЗапроса);
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыТипПараметраПриИзменении(Элемент)
	 #Если ТонкийКлиент ИЛИ ВебКлиент Тогда
		Предупреждение("Для выбора типов параметров необходимо запустить приложение 1С:Предприятия в толстом клиенте");
		Возврат;
	#Иначе
		
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для каждого Стр Из Объект.Параметры Цикл
		Если Не ЗначениеЗаполнено(Стр.ТипПараметра) Тогда
			Сообщить("Не указан тип параметра """ + Стр.ИмяПараметра + """");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.ИБ = ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ") И Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда 
		Сообщить("Нет сопоставления для поля ""Сотрудник""");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.ИБ <> ПредопределенноеЗначение("Справочник.KPI_ИнформационныеБазы.ТекущаяИБ") И (Не ЗначениеЗаполнено(Объект.ФизЛицо) И Не ЗначениеЗаполнено(Объект.КодФизЛица)) Тогда
		Сообщить("Нет сопоставления для поля ""Физ лицо"" или ""Код физ лица""");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		Сообщить("Нет сопоставления для поля ""Период""");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Или Не ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Сообщить("Нет сопоставления для параметров ""Дата начала"" или ""Дата окончания""");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ФормулаФакта) Тогда
		Сообщить("Не введена формула для расчета факта");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура РесурсыПредставлениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Для каждого Стр Из Объект.Ресурсы Цикл
		Если Текст = Стр.Представление Тогда
			Сообщить("Представление """ + Текст + """ уже присутствует в таблице ресурсов");
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры



