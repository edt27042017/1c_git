&НаКлиенте
Перем ГиперСсылкаВводаТекст;


// Показывает/Скрывает элемент на форме 
// Параметры
//  <НазваниеЭлемента>  - <Строка> - <Имя элемента на форме>
//  <Видим>  - <Булево> - <Показать(Истина) или скрыть(Ложь) элемент>
Процедура ВидимостьЭлемента(НазваниеЭлемента, Видим)
	
	Попытка
		ЭтаФорма.Элементы.Найти(НазваниеЭлемента).Видимость = Видим;
	Исключение
	КонецПопытки;
	
КонецПроцедуры //ВидимостьЭлемента

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Предопределенный Тогда
		Сообщить("Запрещено изменять предопределенные целевые показатели ""СмартЗадача"" или ""Стандарт""");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Формула) Тогда
		Объект.Формула = ГиперСсылкаВводаТекст;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ФормулаСписокФакт) Тогда
		Объект.ФормулаСписокФакт = ГиперСсылкаВводаТекст;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ФормулаСписокПлан) Тогда
		Объект.ФормулаСписокПлан = ГиперСсылкаВводаТекст;
	КонецЕсли;
	       
	ВидимостьЭлемента("ГруппаФормулаФакта", Ложь);
	ВидимостьЭлемента("ГруппаФормулаПлана", Ложь);
	ВидимостьЭлемента("ГруппаС21", Ложь);
	ВидимостьЭлемента("ГруппаС22", Ложь);
	
	РасчетРезультативностиПриИзменении(ТекущийЭлемент);
	ТипРасчетаЗначенияФактаПриИзменении(ТекущийЭлемент);
	ТипРасчетаЗначенияПланаПриИзменении(ТекущийЭлемент);
	ВидСвязиФактаПриИзменении(ТекущийЭлемент);
	ВидСвязиПланаПриИзменении(ТекущийЭлемент);

	
	Если ЧтениеЭлементовСвязейФакт() <> Неопределено Тогда 
		ЭтаФорма.ЭлементыСтруктурыКомпанииФакт.ЗагрузитьЗначения(ЧтениеЭлементовСвязейФакт());	
	КонецЕсли;
	
	Если ЧтениеЭлементовСвязейПлан() <> Неопределено Тогда 
		ЭтаФорма.ЭлементыСтруктурыКомпанииПлан.ЗагрузитьЗначения(ЧтениеЭлементовСвязейПлан());	
	КонецЕсли;
	 	
    ПерерисоватьКартинки();
	 	
	Если ПустаяСтрока(Объект.НазваниеАналитики1) Тогда
		Объект.НазваниеАналитики1 = "Название аналитики 1"
	КонецЕсли;
	Если ПустаяСтрока(Объект.НазваниеАналитики2) Тогда
		Объект.НазваниеАналитики2 = "Название аналитики 2"
	КонецЕсли;
	Если ПустаяСтрока(Объект.НазваниеАналитики3) Тогда
		Объект.НазваниеАналитики3 = "Название аналитики 3"
	КонецЕсли;
	Если ПустаяСтрока(Объект.НазваниеАналитики4) Тогда
		Объект.НазваниеАналитики4 = "Название аналитики 4"
	КонецЕсли;
	Если ПустаяСтрока(Объект.НазваниеАналитики5) Тогда
		Объект.НазваниеАналитики5 = "Название аналитики 5"
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетРезультативностиПриИзменении(Элемент)
	Если Объект.РасчетРезультативности = ПредопределенноеЗначение("Перечисление.KPI_ВидыПоказателей.ПоФормуле") Тогда
		ВидимостьЭлемента("ГруппаС21", Истина);
		ВидимостьЭлемента("Декорация1доп", Ложь);
	Иначе 
		ВидимостьЭлемента("ГруппаС21", Ложь);
		ВидимостьЭлемента("Декорация1доп", Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипРасчетаЗначенияФактаПриИзменении(Элемент)
	Если Объект.ТипРасчетаЗначенияФакта = ПредопределенноеЗначение("Перечисление.KPI_ТипыРасчетаФакта.ПоФормуле") Тогда
		ВидимостьЭлемента("ГруппаФормулаФакта", Истина);
		ВидимостьЭлемента("ГруппаС22", Ложь);
	ИначеЕсли Объект.ТипРасчетаЗначенияФакта = ПредопределенноеЗначение("Перечисление.KPI_ТипыРасчетаФакта.МеханизмСбораФактов") Тогда	
		ВидимостьЭлемента("ГруппаФормулаФакта", Ложь);
		ВидимостьЭлемента("ГруппаС22", Истина);
	Иначе 
		ВидимостьЭлемента("ГруппаФормулаФакта", Ложь);
		ВидимостьЭлемента("ГруппаС22", Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипРасчетаЗначенияПланаПриИзменении(Элемент)
	Если Объект.ТипРасчетаЗначенияПлана = ПредопределенноеЗначение("Перечисление.KPI_ТипыРасчетаПлана.ПоФормуле") Тогда
		ВидимостьЭлемента("ГруппаФормулаПлана", Истина);
	Иначе 
		ВидимостьЭлемента("ГруппаФормулаПлана", Ложь);
	КонецЕсли;
КонецПроцедуры

//при передаче данных с форм
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Справочник.KPI_ЦелевыеПоказатели.Форма.ФормаРасчетаВыполнения" Тогда
		Объект.Шкала = ВыбранноеЗначение.Шкала;
		
		Если ПустаяСтрока(ВыбранноеЗначение.Формула) Тогда
				Объект.Формула = ГиперСсылкаВводаТекст;
			Иначе 
				Объект.Формула = ВыбранноеЗначение.Формула;
		КонецЕсли;
	КонецЕсли;
	
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.KPI_ЦелевыеПоказатели.Форма.ФормаРасчетаПланаФакта" Тогда
		Если ВыбранноеЗначение.Вкладка = "Факт" Тогда
			Если ПустаяСтрока(ВыбранноеЗначение.Формула) Тогда
				Объект.ФормулаСписокФакт = ГиперСсылкаВводаТекст;
			Иначе 
				Объект.ФормулаСписокФакт = ВыбранноеЗначение.Формула;
			КонецЕсли;
		ИначеЕсли ВыбранноеЗначение.Вкладка = "План" Тогда
			Если ПустаяСтрока(ВыбранноеЗначение.Формула) Тогда
				Объект.ФормулаСписокПлан = ГиперСсылкаВводаТекст;
			Иначе 
				Объект.ФормулаСписокПлан = ВыбранноеЗначение.Формула;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.KPI_ФормаСпискаСтруктураКомпании" Тогда
		Если ВыбранноеЗначение.Ключ = "Факт" Тогда 
			ЭтаФорма.ЭлементыСтруктурыКомпанииФакт = ВыбранноеЗначение.СЗ;
		ИначеЕсли ВыбранноеЗначение.Ключ = "План" Тогда 
			ЭтаФорма.ЭлементыСтруктурыКомпанииПлан = ВыбранноеЗначение.СЗ;
		КонецЕсли;
	КонецЕсли;
	
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.KPI_ЦелевыеПоказатели.Форма.ФормаСпискаМетаданных" Тогда
		Если ВыбранноеЗначение.Ключ = "ТипАналитики1" Тогда
			Объект.ТипАналитики1 = ВыбранноеЗначение.Значение;
			Объект.ТипАналитики1Представление = ВыбранноеЗначение.Представление;
		ИначеЕсли ВыбранноеЗначение.Ключ = "ТипАналитики2" Тогда
			Объект.ТипАналитики2 = ВыбранноеЗначение.Значение;
			Объект.ТипАналитики2Представление = ВыбранноеЗначение.Представление;
		ИначеЕсли ВыбранноеЗначение.Ключ = "ТипАналитики3" Тогда
			Объект.ТипАналитики3 = ВыбранноеЗначение.Значение;
			Объект.ТипАналитики3Представление = ВыбранноеЗначение.Представление;
		ИначеЕсли ВыбранноеЗначение.Ключ = "ТипАналитики4" Тогда
			Объект.ТипАналитики4 = ВыбранноеЗначение.Значение;
			Объект.ТипАналитики4Представление = ВыбранноеЗначение.Представление;
		ИначеЕсли ВыбранноеЗначение.Ключ = "ТипАналитики5" Тогда
			Объект.ТипАналитики5 = ВыбранноеЗначение.Значение;
			Объект.ТипАналитики5Представление = ВыбранноеЗначение.Представление;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписьЭлементовСвязей(м1, м2)
	Объект.ЭлементыСвязейФакт = ЗначениеВСтрокуВнутр(м1);
	Объект.ЭлементыСвязейПлан = ЗначениеВСтрокуВнутр(м2);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	МасФакт = ЭтаФорма.ЭлементыСтруктурыКомпанииФакт.ВыгрузитьЗначения();
	МасПлан = ЭтаФорма.ЭлементыСтруктурыКомпанииПлан.ВыгрузитьЗначения();
	ЗаписьЭлементовСвязей(МасФакт, МасПлан);
	
	
	Если Объект.Формула = ГиперСсылкаВводаТекст Тогда 
		Объект.Формула = Неопределено;
	КонецЕсли;
	
	Если Объект.ФормулаСписокФакт = ГиперСсылкаВводаТекст Тогда 
		Объект.ФормулаСписокФакт = Неопределено;
	КонецЕсли;
	
	Если Объект.ФормулаСписокПлан = ГиперСсылкаВводаТекст Тогда 
		Объект.ФормулаСписокПлан = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЧтениеЭлементовСвязейФакт()
	Если ПустаяСтрока(Объект.ЭлементыСвязейФакт) Тогда 
		Возврат Неопределено;
	Иначе
		Возврат ЗначениеИзСтрокиВнутр(Объект.ЭлементыСвязейФакт);
	КонецЕсли;
КонецФункции

&НаСервере
Функция ЧтениеЭлементовСвязейПлан()
	Если ПустаяСтрока(Объект.ЭлементыСвязейПлан) Тогда 
		Возврат Неопределено;
	Иначе
		Возврат ЗначениеИзСтрокиВнутр(Объект.ЭлементыСвязейПлан);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ЛогоВосклЗнакЛНажатие(Элемент)
	Объект.Инвертирование = НЕ Объект.Инвертирование;
	ПерерисоватьКартинки();
КонецПроцедуры


&НаКлиенте
Процедура ЛогоВосклЗнакПНажатие(Элемент)
	Объект.Инвертирование = НЕ Объект.Инвертирование;
	ПерерисоватьКартинки();
КонецПроцедуры

Процедура ПерерисоватьКартинки()
	Если НЕ Объект.Инвертирование Тогда //картинка слева зеленая
		ЭтаФорма.Элементы.Найти("ЛогоВосклЗнакЛ").Картинка = БиблиотекаКартинок.ВосклицательныйЗнакКрасный;
		ЭтаФорма.Элементы.Найти("ЛогоВосклЗнакП").Картинка = БиблиотекаКартинок.ВосклицательныйЗнакЗеленый;
	Иначе
		ЭтаФорма.Элементы.Найти("ЛогоВосклЗнакЛ").Картинка = БиблиотекаКартинок.ВосклицательныйЗнакЗеленый;
		ЭтаФорма.Элементы.Найти("ЛогоВосклЗнакП").Картинка = БиблиотекаКартинок.ВосклицательныйЗнакКрасный;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СостояниеНижняяГраницаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = Объект.СостояниеВерхняяГраница Тогда 
		Сообщить("Нижняя и верхняя границы не должны быть одинаковыми");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СостояниеВерхняяГраницаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = Объект.СостояниеНижняяГраница Тогда 
		Сообщить("Нижняя и верхняя границы не должны быть одинаковыми");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура НазваниеАналитики1Нажатие(Элемент, СтандартнаяОбработка)
	ВвестиСтроку(Объект.НазваниеАналитики1, "Введите название аналитики", 50, Ложь);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НазваниеАналитики2Нажатие(Элемент, СтандартнаяОбработка)
	ВвестиСтроку(Объект.НазваниеАналитики2, "Введите название аналитики", 50, Ложь);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НазваниеАналитики3Нажатие(Элемент, СтандартнаяОбработка)
	ВвестиСтроку(Объект.НазваниеАналитики3, "Введите название аналитики", 50, Ложь);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НазваниеАналитики4Нажатие(Элемент, СтандартнаяОбработка)
	ВвестиСтроку(Объект.НазваниеАналитики4, "Введите название аналитики", 50, Ложь);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НазваниеАналитики5Нажатие(Элемент, СтандартнаяОбработка)
	ВвестиСтроку(Объект.НазваниеАналитики5, "Введите название аналитики", 50, Ложь);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

//Открыть Форму расчета выполнения
&НаКлиенте
Процедура НадписьФормулаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Форма = ПолучитьФорму("Справочник.KPI_ЦелевыеПоказатели.Форма.ФормаРасчетаВыполнения", , ЭтаФорма, "ДляФормаРасчетаВыполнения");	
	Форма.Открыть();
КонецПроцедуры


//Открыть Форму расчета плана/факта
&НаКлиенте
Процедура НадписьФормулаФактНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	П = Новый Структура("Ключ", "Факт");
	
	Форма = ПолучитьФорму("Справочник.KPI_ЦелевыеПоказатели.Форма.ФормаРасчетаПланаФакта", П, ЭтаФорма);	
	Форма.Открыть();
КонецПроцедуры

//Открыть Форму расчета плана/факта
&НаКлиенте
Процедура НадписьФормулаПланНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	П = Новый Структура("Ключ", "План");

	Форма = ПолучитьФорму("Справочник.KPI_ЦелевыеПоказатели.Форма.ФормаРасчетаПланаФакта", П, ЭтаФорма);	
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ВидСвязиФактаПриИзменении(Элемент)
	ЭтаФорма.ЭлементыСтруктурыКомпанииФакт.Очистить();
	
	Если Объект.ВидСвязиФакта = ПредопределенноеЗначение("Перечисление.KPI_ВидыСвязиФормулы.ВИерархии") Или Объект.ВидСвязиФакта = ПредопределенноеЗначение("Перечисление.KPI_ВидыСвязиФормулы.ВСписке") Тогда
		ВидимостьЭлемента("ЭлементыСтруктурыКомпанииФакт", Истина);
	Иначе 
		ВидимостьЭлемента("ЭлементыСтруктурыКомпанииФакт", Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидСвязиПланаПриИзменении(Элемент)
	ЭтаФорма.ЭлементыСтруктурыКомпанииПлан.Очистить();
	
	Если Объект.ВидСвязиПлана = ПредопределенноеЗначение("Перечисление.KPI_ВидыСвязиФормулы.ВИерархии") Или Объект.ВидСвязиПлана = ПредопределенноеЗначение("Перечисление.KPI_ВидыСвязиФормулы.ВСписке") Тогда
		ВидимостьЭлемента("ЭлементыСтруктурыКомпанииПлан", Истина);
	Иначе 
		ВидимостьЭлемента("ЭлементыСтруктурыКомпанииПлан", Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыСтруктурыКомпанииФактНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если Объект.ВидСвязиФакта = ПредопределенноеЗначение("Перечисление.KPI_ВидыСвязиФормулы.ВИерархии") Тогда
		Список = Новый СписокЗначений;
		Список.Добавить(KPI_ОбщегоНазначения.ОбработкаВыбораПолучитьСтруктуруКомпанииНаДату(ТекущаяДата(), ЭтаФорма, СтандартнаяОбработка, Истина));
		
		ЭлементыСтруктурыКомпанииФакт = Список;
	КонецЕсли;                                    
	
	Если Объект.ВидСвязиФакта = ПредопределенноеЗначение("Перечисление.KPI_ВидыСвязиФормулы.ВСписке") Тогда
		СЗ = Новый СписокЗначений;
		СЗ.ЗагрузитьЗначения(ЭлементыСтруктурыКомпанииФакт.ВыгрузитьЗначения());
		
		П = Новый Структура;
		П.Вставить("Ключ", "Факт");
		П.Вставить("Список", СЗ);
		
		Форма = ПолучитьФорму("ОбщаяФорма.KPI_ФормаСпискаСтруктураКомпании", П, ЭтаФорма);
		Список = Форма.ОткрытьМодально();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыСтруктурыКомпанииПланНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если Объект.ВидСвязиПлана = ПредопределенноеЗначение("Перечисление.KPI_ВидыСвязиФормулы.ВИерархии") Тогда
		Список = Новый СписокЗначений;
		Список.Добавить(KPI_ОбщегоНазначения.ОбработкаВыбораПолучитьСтруктуруКомпанииНаДату(ТекущаяДата(), ЭтаФорма, СтандартнаяОбработка, Истина));
		
		ЭлементыСтруктурыКомпанииПлан = Список;
	КонецЕсли;                                    
	
	Если Объект.ВидСвязиПлана = ПредопределенноеЗначение("Перечисление.KPI_ВидыСвязиФормулы.ВСписке") Тогда
		СЗ = Новый СписокЗначений;
		СЗ.ЗагрузитьЗначения(ЭлементыСтруктурыКомпанииПлан.ВыгрузитьЗначения());
		
		П = Новый Структура;
		П.Вставить("Ключ", "План");
		П.Вставить("Список", СЗ);

		Форма = ПолучитьФорму("ОбщаяФорма.KPI_ФормаСпискаСтруктураКомпании", П, ЭтаФорма);
		Список = Форма.ОткрытьМодально();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТипАналитики(ИмяКлюча)
	П = Новый Структура("Ключ", ИмяКлюча);
	
	Форма = ПолучитьФорму("Справочник.KPI_ЦелевыеПоказатели.Форма.ФормаСпискаМетаданных", П, ЭтаФорма);

	Список = Форма.ОткрытьМодально();
КонецПроцедуры 

&НаКлиенте
Процедура ТипАналитики1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьТипАналитики("ТипАналитики1");
КонецПроцедуры

&НаКлиенте
Процедура ТипАналитики2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьТипАналитики("ТипАналитики2");
КонецПроцедуры

&НаКлиенте
Процедура ТипАналитики3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьТипАналитики("ТипАналитики3");
КонецПроцедуры

&НаКлиенте
Процедура ТипАналитики4НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьТипАналитики("ТипАналитики4");
КонецПроцедуры

&НаКлиенте
Процедура ТипАналитики5НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьТипАналитики("ТипАналитики5");
КонецПроцедуры 

&НаКлиенте
Процедура ФормулаПланаПредставлениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	НайденныеСтроки = Объект.ФормулаПлана.НайтиСтроки(Новый Структура("Представление", Текст));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Сообщить("Данное представление назначено другому целевому показателю");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФактаПредставлениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	НайденныеСтроки = Объект.ФормулаФакта.НайтиСтроки(Новый Структура("Представление", Текст));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Сообщить("Данное представление назначено другому целевому показателю");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФактаНазваниеФильтраАналитикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ТекущиеДанные = Элементы.ФормулаФакта.ТекущиеДанные;
	ЦП            = ТекущиеДанные.ЦелевойПоказатель;
	КлючАналитики = ТекущиеДанные.КлючАналитики;
	НаименованиеФильтраАналитик = ТекущиеДанные.НазваниеФильтраАналитик;	
	KPI_ИнтерфейсКлиент.НачалоВыбораАналитик(ЦП,КлючАналитики,НаименованиеФильтраАналитик,Элементы.ФормулаФакта,СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПланаНазваниеФильтраАналитикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	ТекущиеДанные = Элементы.ФормулаПлана.ТекущиеДанные;	
	ЦП            = ТекущиеДанные.ЦелевойПоказатель;
	КлючАналитики = ТекущиеДанные.КлючАналитики;
	НаименованиеФильтраАналитик = ТекущиеДанные.НазваниеФильтраАналитик;	
	KPI_ИнтерфейсКлиент.НачалоВыбораАналитик(ЦП,КлючАналитики,НаименованиеФильтраАналитик,Элементы.ФормулаПлана,СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФактаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПланаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,ВыбранноеЗначение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФормулаФактаНазваниеФильтраАналитикОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.ФормулаФакта.ТекущиеДанные.КлючАналитики = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПланаНазваниеФильтраАналитикОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.ФормулаПлана.ТекущиеДанные.КлючАналитики = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ФормулаФактаЦелевойПоказательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.KPI_ЦелевыеПоказатели.СмартЗадача") Или ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.KPI_ЦелевыеПоказатели.Стандарт") Тогда
		Сообщить("Запрещено выбирать предопределенный целевой показатель ""СмартЗадача"" или ""Стандарт""");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Если ВыбранноеЗначение = Объект.Ссылка Тогда
		Сообщить("Целевой показатель """ + ВыбранноеЗначение + """ не должен ссылаться на самого себя");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПланаЦелевойПоказательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.KPI_ЦелевыеПоказатели.СмартЗадача")
		Или ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.KPI_ЦелевыеПоказатели.Стандарт") Тогда
		Сообщить("Запрещено выбирать предопределенный целевой показатель ""СмартЗадача"" или ""Стандарт""");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Если ВыбранноеЗначение = Объект.Ссылка Тогда
		Сообщить("Целевой показатель """ + ВыбранноеЗначение + """ не должен ссылаться на самого себя");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПланаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Найти(Объект.ФормулаСписокПлан, "[" + Элемент.ТекущиеДанные.Представление + "]") <> 0 И (Поле.Имя = "ФормулаПланаЦелевойПоказатель" Или Поле.Имя = "ФормулаПланаПредставление") Тогда 
		Сообщить("Нельзя редектировать Целевой показатель или Представление, если он присутствует в формуле расчета плана");
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФактаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Найти(Объект.ФормулаСписокФакт, "[" + Элемент.ТекущиеДанные.Представление + "]") <> 0 И (Поле.Имя = "ФормулаФактаЦелевойПоказатель" Или Поле.Имя = "ФормулаФактаПредставление") Тогда 
		Сообщить("Нельзя редектировать Целевой показатель или Представление, если он присутствует в формуле расчета факта");
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПланаПередУдалением(Элемент, Отказ)
	Если Найти(Объект.ФормулаСписокПлан, "[" + Элемент.ТекущиеДанные.Представление + "]") <> 0 Тогда 
		Сообщить("Нельзя удалять Целевой показатель, если он присутствует в формуле расчета плана");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФактаПередУдалением(Элемент, Отказ)
	Если Найти(Объект.ФормулаСписокФакт, "[" + Элемент.ТекущиеДанные.Представление + "]") <> 0 Тогда 
		Сообщить("Нельзя удалять Целевой показатель, если он присутствует в формуле расчета факта");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ГиперСсылкаВводаТекст = "Введите формулу";
	
	Если Объект.РасчетРезультативности = Перечисления.KPI_ВидыПоказателей.ПоФормуле И (Объект.Формула = ГиперСсылкаВводаТекст Или Не ЗначениеЗаполнено(Объект.Формула)) Тогда 
		Сообщить("При методе расчета значения результативности ""По формуле"" нужно задать формулу");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипРасчетаЗначенияФакта = Перечисления.KPI_ТипыРасчетаФакта.ПоФормуле И (Объект.ФормулаСписокФакт = ГиперСсылкаВводаТекст Или Не ЗначениеЗаполнено(Объект.ФормулаСписокФакт)) Тогда 
		Сообщить("При методе расчета значения факта ""По формуле"" нужно задать формулу");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипРасчетаЗначенияПлана = Перечисления.KPI_ТипыРасчетаПлана.ПоФормуле И (Объект.ФормулаСписокПлан = ГиперСсылкаВводаТекст Или Не ЗначениеЗаполнено(Объект.ФормулаСписокПлан)) Тогда 
		Сообщить("При методе расчета значения плана ""По формуле"" нужно задать формулу");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

КонецПроцедуры



ГиперСсылкаВводаТекст = "Введите формулу";
