
&НаКлиенте
Процедура СохранитьМакет(Команда)
	Если ЦелевыеПоказатели.Количество() = 0 Тогда
		Сообщить("Не выбраны целевые показатели");
		Возврат;
	КонецЕсли;
	
	Текст = "";
	Если Не ВвестиСтроку(Текст, "Введите наименование макета", 50, Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьМакет(Текст, Новый Структура("ЦП", ЦелевыеПоказатели));	
КонецПроцедуры


&НаСервере
Процедура ЗаписатьМакет(Текст, СтруктураЦП)
	ТЗЦП = СтруктураЦП.ЦП;
	
	НовыйЭлемент = Справочники.KPI_Макеты.СоздатьЭлемент();
	НовыйЭлемент.Наименование = Текст;
	
	Для каждого Стр Из ТЗЦП Цикл
		НовСтр = НовыйЭлемент.ЦелевыеПоказатели.Добавить();
		НовСтр.ЦелевойПоказатель = Стр.ЦелевойПоказатель;
	КонецЦикла;
	
	НовыйЭлемент.Записать();
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьМакет(Команда)
	Если Вопрос("Таблицы целевых показателей и параметров со значениями будут очищены
		|Вы уверены?", РежимДиалогаВопрос.ДаНет, 0) = КодВозвратаДиалога.Да Тогда
		Форма = ПолучитьФорму("Справочник.KPI_Макеты.ФормаВыбора", , ЭтаФорма);
		Форма.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОстановитьАвтоматическийСбор(Команда)
	ОчиститьДанныеДляАвтоматическогоСбораФактов();
	ЗаписатьКонстантуПроверкаНаложенияФактов(Истина);
	ОтключитьРегламентноеЗадание();
	УстановитьВидимостьЭлементов();
КонецПроцедуры


&НаСервере
Процедура ЗаписатьКонстантуПроверкаНаложенияФактов(Флаг)
	Константы.KPI_ПроверкаНаложенияФактов.Установить(Флаг);
КонецПроцедуры


&НаКлиенте
Процедура ЗапуститьАвтоматическийСбор(Команда)
	Если ЦелевыеПоказатели.Количество() = 0 Тогда
		Сообщить("Не выбраны целевые показатели");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		Сообщить("Не указана дата начала сбора фактов");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		Сообщить("Не указана дата окончания сбора фактов");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Интервал) Тогда
		Сообщить("Не указан интервал сбора фактов");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВремяЗапуска) Тогда
		Сообщить("Не указано время запуска сбора фактов");
		Возврат;
	КонецЕсли;
	
	
	Если Не ПараметрыЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	
	//развернем таблицу, если включены общие параметры
	Если ОбщиеПараметры Тогда 
		ПараметрыЗапросаСтруктура = Новый Структура;
		ПараметрыЗапросаСтруктура.Вставить("ЦП", ЦелевыеПоказатели);
		ПараметрыЗапросаСтруктура.Вставить("ТЗ", ПараметрыЗапроса);
		ТЗ = РазвернутьТаблицуПараметров(ПараметрыЗапросаСтруктура);
		ТЗСтруктура = Новый Структура("ТЗ", ТЗ);
	Иначе 
		ТЗСтруктура = Новый Структура("ТЗ", ПараметрыЗапроса);
	КонецЕсли;
	
	
	ЗаписатьДанныеДляАвтоматическогоСбораФактов(ТЗСтруктура);
	ЗаписатьКонстантуПроверкаНаложенияФактов(ПроверятьНаложениеФактов);
	
	ВключитьРегламентноеЗадание(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания), Интервал, ВремяЗапуска);
	УстановитьВидимостьЭлементов();
КонецПроцедуры


&НаКлиенте
Функция ПараметрыЗаполнены()
	Заполненность = Истина;
	
	Для каждого Стр Из ПараметрыЗапроса Цикл
		Если Не ЗначениеЗаполнено(Стр.Значение) Тогда
			Если ОбщиеПараметры Тогда 
				Сообщить("Не заполнено значение параметра """ + Стр.Параметр + """");
			Иначе 
				Сообщить("Не заполнено значение параметра """ + Стр.Параметр + """ для целевого показателя """ + Стр.ЦелевойПоказатель + """");
			КонецЕсли;
			
			Заполненность = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Заполненность;
КонецФункции



&НаСервере
Функция РазвернутьТаблицуПараметров(ТЗСтруктура)
	ТаблицаЦП = ТЗСтруктура.ЦП;
	ПараметрыЦП = ТЗСтруктура.ТЗ;
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ЦелевойПоказатель");
	ТЗ.Колонки.Добавить("Параметр");
	ТЗ.Колонки.Добавить("Значение");
	
	Для каждого СтрТЗ Из ПараметрыЦП Цикл
		НовСтр = ТЗ.Добавить();
		НовСтр.ЦелевойПоказатель = СтрТЗ.ЦелевойПоказатель;
		НовСтр.Параметр = СтрТЗ.Параметр;
		НовСтр.Значение = СтрТЗ.Значение;
	КонецЦикла;
	
	Для каждого ЭлемЦП Из ТаблицаЦП Цикл
		СтруктураПараметры = ПолучитьПараметрыДляЗапроса(ЭлемЦП.ЦелевойПоказатель);
		ТаблЗнач = СтруктураПараметры.ТЗ;
		
		Для каждого Стр Из ТаблЗнач Цикл
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ЦелевойПоказатель", ЭлемЦП.ЦелевойПоказатель);
			СтруктураПоиска.Вставить("Параметр", Стр.ИмяПараметра);
			
			НайденныеСтроки = ПараметрыЦП.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НовСтр = ТЗ.Добавить();
				НовСтр.ЦелевойПоказатель = ЭлемЦП.ЦелевойПоказатель;
				НовСтр.Параметр = Стр.ИмяПараметра;
				НовСтр.Значение = ПараметрыЦП.НайтиСтроки(Новый Структура("Параметр", Стр.ИмяПараметра))[0].Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТЗ;	
КонецФункции


&НаСервере
Функция ПолучитьФактыОбертка(ТЗ, ТЗМаксимальныхПериодов)
	КриптоМодуль = KPI_ОбщегоНазначенияСервер.ПолучитьКриптоМодуль();
	
	Возврат КриптоМодуль.ПолучитьФакты(ТЗ, ТЗМаксимальныхПериодов);
КонецФункции


&НаКлиенте
Процедура Скорректировать(Команда)
	
	
	ПоказателиОтмечены = Ложь;
	
	Для каждого Стр Из Корректировки Цикл
		Если Стр.Скорректировать Тогда
			ПоказателиОтмечены = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ПоказателиОтмечены Тогда
		 Сообщить("Не отмечены целевые показатели для корректировки");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачалаПроверки) Тогда
		Сообщить("Не указана дата начала для корректировки сбора фактов");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаОкончанияПроверки) Тогда
		Сообщить("Не указана дата окончания для корректировки сбора фактов");
		Возврат;
	КонецЕсли;
	
	
	ТЗЦП = ПолучитьКорректируемыеЦП(Новый Структура("ТЧ", Корректировки));
	
	ТЗДокументыФакты = KPI_ОбщегоНазначенияСервер.УдалитьПересекающиесяЗаписи(ТЗЦП, НачалоДня(ДатаНачалаПроверки), КонецДня(ДатаОкончанияПроверки), Истина);
	
	ТЗ = ПолучитьПараметрыЗапросаИзДокументов(ТЗДокументыФакты);
	
	ТЗНаложенныхПериодов = KPI_ОбщегоНазначенияСервер.УдалитьПересекающиесяЗаписи(ТЗ, НачалоДня(ДатаНачалаПроверки), КонецДня(ДатаОкончанияПроверки));
	
	//уберем из ТЗЦП те показатели, по которым нет наложенных периодов
	ТЗЦП = ПолучитьТолькоНаложенныеЦП(ТЗНаложенныхПериодов);
	
	
	ТЗМаксимальныхПериодов = KPI_ОбщегоНазначенияСервер.ПолучитьТЗМаксимальныхПериодовДляДат(ТЗЦП, ТЗНаложенныхПериодов, НачалоДня(ДатаНачалаПроверки), КонецДня(ДатаОкончанияПроверки));
	
	ТЗФакты = ПолучитьФактыОбертка(ТЗ, ТЗМаксимальныхПериодов);
	
	KPI_ОбщегоНазначенияСервер.ЗаписатьФактыВРегистр(Новый Структура("ТЗПараметры, ТЗФакты, ЦП, Автомат", ТЗ, ТЗФакты, ТЗМаксимальныхПериодов, Истина));
	
	
	ОбновитьДиаграмму(ЦелевыеПоказателиКорректировка);
	ОбновитьКорректировки(ЦелевыеПоказателиКорректировка);
КонецПроцедуры


&НаСервере
Функция ПолучитьТолькоНаложенныеЦП(Знач ТЗНаложенныхПериодов)
	ТЗНаложенныхПериодов.Колонки.Удалить(2);	
	ТЗНаложенныхПериодов.Колонки.Удалить(1);
	
	Возврат ТЗНаложенныхПериодов;
КонецФункции
	

&НаСервере
Функция ПолучитьКорректируемыеЦП(СтруктураТЧ)
	ТЗКорректировки = СтруктураТЧ.ТЧ;
	
	ТЗЦП = Новый ТаблицаЗначений;
	ТЗЦП.Колонки.Добавить("ЦелевойПоказатель");
	
	Для каждого Стр Из ТЗКорректировки Цикл
		Если Стр.Скорректировать Тогда
			НовСтр = ТЗЦП.Добавить();
			НовСтр.ЦелевойПоказатель = Стр.ЦелевойПоказатель;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТЗЦП;
КонецФункции


&НаСервере
Функция ПолучитьПараметрыЗапросаИзДокументов(ТЗДок)
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ЦелевойПоказатель");
	ТЗ.Колонки.Добавить("Параметр");
	ТЗ.Колонки.Добавить("Значение");
	
	Для каждого Стр Из ТЗДок Цикл
		Для каждого СтрП Из Стр.Документ.ПараметрыЗапроса Цикл
			Если СтрП.ЦелевойПоказатель = Стр.ЦелевойПоказатель Тогда
				НовСтр = ТЗ.Добавить();
				НовСтр.ЦелевойПоказатель = СтрП.ЦелевойПоказатель;
				НовСтр.Параметр = СтрП.Параметр;
				НовСтр.Значение = СтрП.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТЗ;
КонецФункции


&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	Если РегламентноеЗаданиеВключено() Тогда
		Элементы.СтатутЗадания.Заголовок = "Регламентное задание запущено";
		Элементы.СтатутЗадания.ЦветТекста = WebЦвета.ЗеленыйЛес;
	Иначе 
		Элементы.СтатутЗадания.Заголовок = "Регламентное задание остановлено";
		Элементы.СтатутЗадания.ЦветТекста = WebЦвета.ОранжевоКрасный;
	КонецЕсли;
	
	Если АвтоСборФактов Тогда
		Элементы.ГруппаРасписание.Видимость = Истина;
		
		Если РегламентноеЗаданиеВключено() Тогда
			Элементы.ЗапуститьАвтоматическийСбор.Видимость = Ложь;
			Элементы.ОстановитьАвтоматическийСбор.Видимость = Истина;
		Иначе
			Элементы.ЗапуститьАвтоматическийСбор.Видимость = Истина;
			Элементы.ОстановитьАвтоматическийСбор.Видимость = Ложь;
		КонецЕсли;
		
		Элементы.Собрать.Видимость = Ложь;
		
	Иначе 
		Элементы.ГруппаРасписание.Видимость = Ложь;
		Элементы.ОстановитьАвтоматическийСбор.Видимость = Ложь;
		Элементы.ЗапуститьАвтоматическийСбор.Видимость = Ложь;
		Элементы.Собрать.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПроверятьНаложениеФактов = Истина;
	
	УстановитьВидимостьЭлементов();
	
	ГрафикДН = НачалоМесяца(ТекущаяДата());
	ГрафикДК = КонецМесяца(ТекущаяДата());
	
	ДатаНачалаПроверки = НачалоМесяца(ТекущаяДата());
	ДатаОкончанияПроверки = КонецМесяца(ТекущаяДата());
КонецПроцедуры


&НаСервере
Функция ОбновитьПериодыСбораФактов(ЦП, ДН, ДК)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	KPI_ИнтервалыСбораФактов.ДатаНачалаИнтервала КАК ИнтервалНачало,
	|	KPI_ИнтервалыСбораФактов.ДатаОкончанияИнтервала КАК ИнтервалКонец,
	|	KPI_ИнтервалыСбораФактов.Документ
	|ИЗ
	|	РегистрСведений.KPI_ИнтервалыСбораФактов КАК KPI_ИнтервалыСбораФактов
	|ГДЕ
	|	KPI_ИнтервалыСбораФактов.ЦелевойПоказатель = &ЦП
	|	И (KPI_ИнтервалыСбораФактов.ДатаНачалаИнтервала МЕЖДУ &ДН И &ДК
	|			ИЛИ KPI_ИнтервалыСбораФактов.ДатаОкончанияИнтервала МЕЖДУ &ДН И &ДК
	|			ИЛИ KPI_ИнтервалыСбораФактов.ДатаНачалаИнтервала < &ДН
	|				И KPI_ИнтервалыСбораФактов.ДатаОкончанияИнтервала > &ДК)";
	
	Запрос.УстановитьПараметр("ЦП", ЦП);
	Запрос.УстановитьПараметр("ДН", ДН);
	Запрос.УстановитьПараметр("ДК", ДК);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	ЗначениеВДанныеФормы(ТЗ, Факты);
	
	Возврат Новый Структура("ТЗ", ТЗ);
КонецФункции


&НаСервере
Функция РегламентноеЗаданиеВключено()
	Если РегламентныеЗадания.НайтиПредопределенное("KPI_АвтоматическийСборФактов").Использование Тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции


&НаСервере
Процедура ВключитьРегламентноеЗадание(ДН, ДК, ИнтервалДней, Часы)
	Задание = РегламентныеЗадания.НайтиПредопределенное("KPI_АвтоматическийСборФактов");
	Задание.Расписание.ДатаНачала = ДН + ИнтервалДней * 86400;
	Задание.Расписание.ДатаКонца = ДК;
	Задание.Расписание.ПериодПовтораДней = ИнтервалДней;
	Задание.Расписание.ВремяНачала = Часы;
	Задание.Использование = Истина;
	Задание.Записать();
КонецПроцедуры


&НаСервере
Процедура ОтключитьРегламентноеЗадание()
	Задание = РегламентныеЗадания.НайтиПредопределенное("KPI_АвтоматическийСборФактов");
	Задание.Использование = Ложь;
	Задание.Записать();
КонецПроцедуры                


&НаКлиенте
Процедура АвтоСборФактовПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры


&НаКлиенте
Процедура ЦелевыеПоказателиЦелевойПоказательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Для каждого Стр Из ЦелевыеПоказатели Цикл
		Если ВыбранноеЗначение = Стр.ЦелевойПоказатель Тогда
			Сообщить("Целевой показатель """ + ВыбранноеЗначение + """ уже добавлен в список целевых показателей");
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ТЗ = ПолучитьПараметрыДляЗапроса(ВыбранноеЗначение).ТЗ;
	
	Для каждого Стр Из ТЗ Цикл
		//Если ОбщиеПараметры Тогда
			СтруктураПоиска = Новый Структура("Параметр", Стр.ИмяПараметра);
			МассивНайденных = ПараметрыЗапроса.НайтиСтроки(СтруктураПоиска);
		//Иначе 
			//МассивНайденных = Новый Массив;
		//КонецЕсли;
		
		Если МассивНайденных.Количество() = 0 Тогда
			НовСтр = ПараметрыЗапроса.Добавить();
			НовСтр.ЦелевойПоказатель = ВыбранноеЗначение;
			НовСтр.Параметр = Стр.ИмяПараметра;
			НовСтр.ТипПараметра = Стр.ТипПараметра;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ПараметрыЗапроса.Обновить();
	
КонецПроцедуры


&НаСервере
Функция ПолучитьПараметрыДляЗапроса(ЦП)
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ИмяПараметра");
	ТЗ.Колонки.Добавить("ТипПараметра");
	
	Для каждого Стр Из ЦП.ИсточникДанных.Параметры Цикл
		НовСтр = ТЗ.Добавить();
		НовСтр.ИмяПараметра = Стр.ИмяПараметра;
		НовСтр.ТипПараметра = Стр.ТипПараметра;
	КонецЦикла;
	
	Возврат Новый Структура("ТЗ", ТЗ);;	
КонецФункции


&НаКлиенте
Процедура ПараметрыЗапросаЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип(Элементы.ПараметрыЗапроса.ТекущиеДанные.ТипПараметра));
	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	Элемент.ОграничениеТипа = ОписаниеТипов; 
КонецПроцедуры


&НаКлиенте
Процедура ЦелевыеПоказателиПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ОбновитьТаблицыИДиаграмму(Элемент.ТекущиеДанные.ЦелевойПоказатель);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьТаблицыИДиаграмму(ЦП)
	Если Не ОбщиеПараметры Тогда 
		ОбновитьСтрокиПараметровЗапроса(ЦП);
	КонецЕсли;
	
	ОбновитьИнтервалыСбораФактов(ЦП);
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьИнтервалыСбораФактов(ЦП)
	Если ЗначениеЗаполнено(ЦП) Тогда
		ТЗ = ОбновитьПериодыСбораФактов(Элементы.ЦелевыеПоказатели.ТекущиеДанные.ЦелевойПоказатель, НачалоДня(ГрафикДН), КонецДня(ГрафикДК)).ТЗ;
		
		ДиаграммаИнтервалы.Очистить();
		ДиаграммаИнтервалы.Обновление = Ложь;
		
		ДиаграммаИнтервалы.ОтображатьЛегенду = Ложь;
		ДиаграммаИнтервалы.АвтоОпределениеПолногоИнтервала = Ложь;
		ДиаграммаИнтервалы.УстановитьПолныйИнтервал(НачалоДня(ГрафикДН), КонецДня(ГрафикДК));
		
		Точка = ДиаграммаИнтервалы.УстановитьТочку(ЦП);
		Серия = ДиаграммаИнтервалы.УстановитьСерию(ЦП);
		Значение = ДиаграммаИнтервалы.ПолучитьЗначение(Точка, Серия);
		
		Для каждого Стр Из ТЗ Цикл
			мИнтервал = Значение.Добавить();
			мИнтервал.Начало = Стр.ИнтервалНачало;
			мИнтервал.Конец = Стр.ИнтервалКонец;
			мИнтервал.Текст = Формат(Стр.ИнтервалНачало, "ДЛФ=Д") + " - " + Формат(Стр.ИнтервалКонец, "ДЛФ=Д");
		КонецЦикла;
		ДиаграммаИнтервалы.Обновление = Истина;
		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСтрокиПараметровЗапроса(ЦП)
	Если Элементы.ЦелевыеПоказатели.ТекущиеДанные <> Неопределено Тогда
		ПараметрыОтбора = Новый Структура("ЦелевойПоказатель", ЦП);
		Элементы.ПараметрыЗапроса.ОтборСтрок = Новый ФиксированнаяСтруктура(ПараметрыОтбора);	
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Удалить(Команда)
	Если Элементы.ЦелевыеПоказатели.ТекущиеДанные <> Неопределено Тогда
		УдалитьЦелевойПоказательИПодчиненныеПараметрыЗапроса(Элементы.ЦелевыеПоказатели.ТекущиеДанные.ЦелевойПоказатель);
		
		Элементы.ЦелевыеПоказатели.Обновить();
		ПерезаполнитьТаблицуПараметров(ОбщиеПараметры);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура УдалитьЦелевойПоказательИПодчиненныеПараметрыЗапроса(ЦП)
	//удалим целевой показатель
	ц = 0;
	Пока ц < ЦелевыеПоказатели.Количество() Цикл
		Если ЦелевыеПоказатели.Получить(ц).ЦелевойПоказатель = ЦП Тогда
			ЦелевыеПоказатели.Удалить(ц);
		Иначе 
			ц = ц + 1;	
		КонецЕсли;
	КонецЦикла;
	
	//удалим зависимые параметры запроса
	н = 0;
	Пока н < ПараметрыЗапроса.Количество() Цикл
		Если ПараметрыЗапроса.Получить(н).ЦелевойПоказатель = ЦП Тогда
			ПараметрыЗапроса.Удалить(н);
		Иначе 
			н = н + 1;	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ЦелевыеПоказателиЦелевойПоказательПриИзменении(Элемент)
	ОбновитьТаблицыИДиаграмму(Элементы.ЦелевыеПоказатели.ТекущиеДанные.ЦелевойПоказатель);
КонецПроцедуры


&НаКлиенте
Процедура Собрать(Команда)
	Если ЦелевыеПоказатели.Количество() = 0 Тогда
		Сообщить("Не выбраны целевые показатели");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		Сообщить("Не указана дата начала сбора фактов");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		Сообщить("Не указана дата окончания сбора фактов");
		Возврат;
	КонецЕсли;
	
	Если Не ПараметрыЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	//развернем таблицу, если включены общие параметры
	Если ОбщиеПараметры Тогда 
		ПараметрыЗапросаСтруктура = Новый Структура;
		ПараметрыЗапросаСтруктура.Вставить("ЦП", ЦелевыеПоказатели);
		ПараметрыЗапросаСтруктура.Вставить("ТЗ", ПараметрыЗапроса);
		ТЗ = РазвернутьТаблицуПараметров(ПараметрыЗапросаСтруктура);
	Иначе
		ТЗ = ТЧвТЗ(Новый Структура("ТЧ", ПараметрыЗапроса));
	КонецЕсли;
	
	
	//получим уникальные ЦП из таблицы параметров
	ТЗЦП = KPI_ОбщегоНазначенияСервер.ПолучитьЦПИзПараметров(ТЗ);	
	
	Если ПроверятьНаложениеФактов Тогда
		ТЗНаложенныхПериодов = KPI_ОбщегоНазначенияСервер.УдалитьПересекающиесяЗаписи(ТЗ, НачалоДня(ДатаНачала), КонецДня(ДатаОкончания));
	КонецЕсли;
	
	
	ТЗМаксимальныхПериодов = KPI_ОбщегоНазначенияСервер.ПолучитьТЗМаксимальныхПериодовДляДат(ТЗЦП, ТЗНаложенныхПериодов, НачалоДня(ДатаНачала), КонецДня(ДатаОкончания));
	
	ТЗФакты = ПолучитьТЗМаксимальныхПериодовНаСервере(ТЗ, ТЗМаксимальныхПериодов);
	
	Если ТЗФакты.Количество() = 0 Тогда 
		Сообщить("Отсутствуют факты за данный период");
		Возврат;
	КонецЕсли;
	
	Форма = ПолучитьФорму("Обработка.KPI_СборФактов.Форма.ФормаФакты", Новый Структура("ТЗПараметры, Факты, ЦП, ДН, ДК", ТЗ, ТЗФакты, ТЗМаксимальныхПериодов, НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
	Форма.ОткрытьМодально();
	
	Сообщить("Факты успешно записаны");
	
	ОбновитьТаблицыИДиаграмму(Элементы.ЦелевыеПоказатели.ТекущиеДанные.ЦелевойПоказатель);
КонецПроцедуры


&НаСервере
Функция ПолучитьТЗМаксимальныхПериодовНаСервере(ТЗ, ТЗМаксимальныхПериодов)
	КриптоМодуль = KPI_ОбщегоНазначенияСервер.ПолучитьКриптоМодуль();
	
	Возврат КриптоМодуль.ПолучитьФакты(ТЗ, ТЗМаксимальныхПериодов);
КонецФункции


&НаСервере
Функция ТЧвТЗ(СтруктураТЧ)
	ТЧ = СтруктураТЧ.ТЧ;
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ЦелевойПоказатель");
	ТЗ.Колонки.Добавить("Параметр");
	ТЗ.Колонки.Добавить("Значение");
	
	Для каждого СтрТЧ Из ТЧ Цикл
		НовСтр = ТЗ.Добавить();
		НовСтр.ЦелевойПоказатель = СтрТЧ.ЦелевойПоказатель;
		НовСтр.Параметр = СтрТЧ.Параметр;
		НовСтр.Значение = СтрТЧ.Значение;
	КонецЦикла;
	
	Возврат ТЗ;
КонецФункции


&НаКлиенте
Процедура ОбщиеПараметрыПриИзменении(Элемент)
	ПерезаполнитьТаблицуПараметров(ОбщиеПараметры);
КонецПроцедуры


&НаКлиенте
Процедура ПерезаполнитьТаблицуПараметров(Флаг)
	ПараметрыЗапроса.Очистить();
	
	Для каждого ЦП Из ЦелевыеПоказатели Цикл
		ТЗ = ПолучитьПараметрыДляЗапроса(ЦП.ЦелевойПоказатель).ТЗ;
		
		Для каждого Стр Из ТЗ Цикл
			Если Флаг Тогда
				СтруктураПоиска = Новый Структура("Параметр", Стр.ИмяПараметра);
				МассивНайденных = ПараметрыЗапроса.НайтиСтроки(СтруктураПоиска);
			Иначе 
				МассивНайденных = Новый Массив;
			КонецЕсли;
			
			Если МассивНайденных.Количество() = 0 Тогда
				НовСтр = ПараметрыЗапроса.Добавить();
				НовСтр.ЦелевойПоказатель = ЦП.ЦелевойПоказатель;
				НовСтр.Параметр = Стр.ИмяПараметра;
				НовСтр.ТипПараметра = Стр.ТипПараметра;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	
	Если Флаг Тогда
		Элементы.ПараметрыЗапроса.ОтборСтрок = Неопределено;
	Иначе 
		Если Элементы.ЦелевыеПоказатели.ТекущиеДанные <> Неопределено Тогда
			ОбновитьСтрокиПараметровЗапроса(Элементы.ЦелевыеПоказатели.ТекущиеДанные.ЦелевойПоказатель);
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ПараметрыЗапроса.Обновить();
КонецПроцедуры


&НаСервере
Процедура ЗаписатьДанныеДляАвтоматическогоСбораФактов(ТЗСтруктура)
	ОчиститьДанныеДляАвтоматическогоСбораФактов();
	
	ТЗ = ТЗСтруктура.ТЗ;
	
	Данные = РегистрыСведений.KPI_ДанныеДляАвтоматическогоСбораФактов.СоздатьНаборЗаписей(); 
	
	Для каждого Стр Из ТЗ Цикл
		НоваяЗапись = Данные.Добавить();
		НоваяЗапись.ЦелевойПоказатель = Стр.ЦелевойПоказатель;
		НоваяЗапись.Параметр = Стр.Параметр;
		НоваяЗапись.Значение = Стр.Значение;
	КонецЦикла;
	
	Данные.Записать();
КонецПроцедуры


&НаСервере
Процедура ОчиститьДанныеДляАвтоматическогоСбораФактов()
	Данные = РегистрыСведений.KPI_ДанныеДляАвтоматическогоСбораФактов.СоздатьНаборЗаписей(); 
	Данные.Прочитать();
	Данные.Очистить();
	Данные.Записать();
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ЦелевыеПоказатели.Очистить();
	
	СтруктураЦП = ПолучитьДанныеИзМакета(ВыбранноеЗначение);
	ТЗ = СтруктураЦП.ТЗ;
	
	Для каждого Стр Из ТЗ Цикл
		НовСтр = ЦелевыеПоказатели.Добавить();
		НовСтр.ЦелевойПоказатель = Стр.ЦелевойПоказатель;
	КонецЦикла;
	
	ПерезаполнитьТаблицуПараметров(ОбщиеПараметры);
	
	Элементы.ЦелевыеПоказатели.АктивизироватьПоУмолчанию = Истина;
КонецПроцедуры


&НаСервере
Функция ПолучитьДанныеИзМакета(Макет)
	ТЧ = Макет.ЦелевыеПоказатели;
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ЦелевойПоказатель");
	
	Для каждого Стр Из ТЧ Цикл
		НовСтр = ТЗ.Добавить();
		НовСтр.ЦелевойПоказатель = Стр.ЦелевойПоказатель;
	КонецЦикла;
	
	Возврат Новый Структура("ТЗ", ТЗ);
КонецФункции


&НаКлиенте
Процедура ГрафикДНПриИзменении(Элемент)
	ОбновитьИнтервалыСбораФактов(Элементы.ЦелевыеПоказатели.ТекущиеДанные.ЦелевойПоказатель);
КонецПроцедуры


&НаКлиенте
Процедура ГрафикДКПриИзменении(Элемент)
	ОбновитьИнтервалыСбораФактов(Элементы.ЦелевыеПоказатели.ТекущиеДанные.ЦелевойПоказатель);
КонецПроцедуры


&НаКлиенте
Процедура ПараметрыЗапросаЗначениеПриИзменении(Элемент)
	Элемент.ОграничениеТипа = Новый ОписаниеТипов; 
КонецПроцедуры

&НаКлиенте
Процедура ЦелевыеПоказателиКорректировкаПриИзменении(Элемент)
	//ОбновитьДиаграммуИТаблицуКорректировки();
	ОбновитьДиаграмму(ЦелевыеПоказателиКорректировка);
	ОбновитьКорректировки(ЦелевыеПоказателиКорректировка);
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьДиаграмму(ТЧЦП)
	ДиаграммаПроверки.Очистить();
	ДиаграммаПроверки.Обновление = Ложь;
	
	ДиаграммаПроверки.ОтображатьЛегенду = Ложь;
	ДиаграммаПроверки.АвтоОпределениеПолногоИнтервала = Ложь;
	ДиаграммаПроверки.УстановитьПолныйИнтервал(НачалоДня(ДатаНачалаПроверки), КонецДня(ДатаОкончанияПроверки));
	
	
	ТЗ = ПолучитьДанныеДляДиаграммыКорректировки(Новый Структура("ТЧЦП",ЦелевыеПоказателиКорректировка), НачалоДня(ДатаНачалаПроверки), КонецДня(ДатаОкончанияПроверки));
	
	Для каждого Стр Из ТЗ Цикл
		Точка = ДиаграммаПроверки.УстановитьТочку(Стр.ЦелевойПоказатель);
		Серия = ДиаграммаПроверки.УстановитьСерию(Стр.ЦелевойПоказатель);
		Значение = ДиаграммаПроверки.ПолучитьЗначение(Точка, Серия);
		
		мИнтервал = Значение.Добавить();
		мИнтервал.Начало = Стр.ИнтервалНачало;
		мИнтервал.Конец = Стр.ИнтервалКонец;
		мИнтервал.Текст = Формат(Стр.ИнтервалНачало, "ДЛФ=Д") + " - " + Формат(Стр.ИнтервалКонец, "ДЛФ=Д");
	КонецЦикла;
	
	ДиаграммаПроверки.Обновление = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьКорректировки(ТЧЦП)
	Корректировки.Очистить();
	
	Для каждого СтрТЧ Из ТЧЦП Цикл
		Если ЗначениеЗаполнено(СтрТЧ.ЦелевойПоказатель) Тогда
			НовСтр = Корректировки.Добавить();
			НовСтр.ЦелевойПоказатель = СтрТЧ.ЦелевойПоказатель;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ЦелевыеПоказателиКорректировкаЦелевойПоказательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Для каждого Стр Из ЦелевыеПоказателиКорректировка Цикл
		Если ВыбранноеЗначение = Стр.ЦелевойПоказатель Тогда
			Сообщить("Целевой показатель """ + ВыбранноеЗначение + """ уже добавлен в список целевых показателей");
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПроверкиПриИзменении(Элемент)
	ОбновитьДиаграмму(ЦелевыеПоказателиКорректировка);
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПроверкиПриИзменении(Элемент)
	ОбновитьДиаграмму(ЦелевыеПоказателиКорректировка);
КонецПроцедуры


&НаСервере
Функция ПолучитьДанныеДляДиаграммыКорректировки(СтруктураТЧ, ДН, ДК)
	ТЧЦП = СтруктураТЧ.ТЧЦП;
	
	//Получим параметризированную таблицу значений целевых показателей
	ТЗЦП = Новый ТаблицаЗначений;
	МассивЦ = Новый Массив;
	МассивЦ.Добавить(Тип("СправочникСсылка.KPI_ЦелевыеПоказатели"));
	ТипДатаЦ = Новый ОписаниеТипов (МассивЦ);
	ТЗЦП.Колонки.Добавить("ЦелевойПоказатель", ТипДатаЦ);

	Для каждого СтрТЧ Из ТЧЦП Цикл
		НовСтр = ТЗЦП.Добавить();
		НовСтр.ЦелевойПоказатель = СтрТЧ.ЦелевойПоказатель;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗЦП.ЦелевойПоказатель
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗЦП КАК ТЗЦП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	KPI_ИнтервалыСбораФактов.ДатаНачалаИнтервала КАК ИнтервалНачало,
	|	KPI_ИнтервалыСбораФактов.ДатаОкончанияИнтервала КАК ИнтервалКонец,
	|	KPI_ИнтервалыСбораФактов.ЦелевойПоказатель
	|ИЗ
	|	РегистрСведений.KPI_ИнтервалыСбораФактов КАК KPI_ИнтервалыСбораФактов
	|ГДЕ
	|	(KPI_ИнтервалыСбораФактов.ДатаНачалаИнтервала МЕЖДУ &ДН И &ДК
	|			ИЛИ KPI_ИнтервалыСбораФактов.ДатаОкончанияИнтервала МЕЖДУ &ДН И &ДК
	|			ИЛИ KPI_ИнтервалыСбораФактов.ДатаНачалаИнтервала < &ДН
	|				И KPI_ИнтервалыСбораФактов.ДатаОкончанияИнтервала > &ДК)
	|	И KPI_ИнтервалыСбораФактов.ЦелевойПоказатель В
	|			(ВЫБРАТЬ
	|				ВТ.ЦелевойПоказатель
	|			ИЗ
	|				ВТ КАК ВТ)";
	
	Запрос.УстановитьПараметр("ТЗЦП", ТЗЦП);
	Запрос.УстановитьПараметр("ДН", ДН);
	Запрос.УстановитьПараметр("ДК", ДК);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
КонецФункции



