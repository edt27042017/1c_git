&НаКлиенте
перем НайденныеИндексы;

&НаСервере
Процедура  СформироватьДерево(НаименованиеСтруктуры = "")
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	KPI_СтруктураКомпанииСрезПоследних.СтруктураКомпании,
	|	ЕСТЬNULL(KPI_СтруктураКомпанииСрезПоследних.СтруктураКомпании.Должность.Наименование, """") + "" ("" + ЕСТЬNULL(KPI_СтруктураКомпанииСрезПоследних.Сотрудник.ФизическоеЛицо.Наименование, """") + "")"" + ЕСТЬNULL("" *("" + KPI_СтруктураКомпанииСрезПоследних.Сотрудник.Квалификация.Наименование + "")"", """") КАК СтруктураКомпанииПредставление,
	|	KPI_СтруктураКомпанииСрезПоследних.Сотрудник,
	|	KPI_СтруктураКомпанииСрезПоследних.Период,
	|	KPI_СтруктураКомпанииСрезПоследних.СтруктураКомпании.Филиал КАК Филиал
	|ИЗ
	|	РегистрСведений.KPI_СтруктураКомпании.СрезПоследних(
	|			&ДатаФормирования,
	|			НЕ СтруктураУдалена
	|				И НЕ Уволен
	|				И &УсловиеФилиал
	|				И &УсловиеНаименование) КАК KPI_СтруктураКомпанииСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	KPI_СтруктураКомпанииСрезПоследних.СтруктураКомпании ИЕРАРХИЯ";
		
	Если ЗначениеЗаполнено(ЭтаФорма.ОтборФилиал) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеФилиал","И СтруктураКомпании.Филиал = &Филиал");
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеФилиал","");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтаФорма.ОтборНаименование) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеНаименование","И ЕСТЬNULL(СтруктураКомпании.Должность.Наименование, """") + "" ("" + ЕСТЬNULL(Сотрудник.ФизическоеЛицо.Наименование, """") + "")"" + ЕСТЬNULL("" *("" + Сотрудник.Квалификация.Наименование + "")"", """") ПОДОБНО &Наименование");
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеНаименование","");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Наименование","%"+НаименованиеСтруктуры+"%");
	Запрос.УстановитьПараметр("Филиал",ЭтаФорма.ОтборФилиал);
	
	Запрос.УстановитьПараметр("ДатаФормирования" , КонецДня(ДатаФормированияСтруктуры));
	
	Результат = Запрос.Выполнить();
	
	Дерево = РеквизитФормыВЗначение("ДеревоКомпании");
	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоКомпании");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаФормированияСтруктурыПриИзменении(Элемент)
	
	НайденныеИндексы = Неопределено;
	СформироватьДерево();
    РаскрытьВсеУровни();
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементСтруктуры(Команда)
	
	НайденныеИндексы = Неопределено;
	ТекущиеДанные             = Элементы.ДеревоКомпании.ТекущиеДанные;
	ПараметрыОткрытия = Новый Структура;
	ЗначенияЗаполнения = Новый Структура;
	Если ТекущиеДанные <> Неопределено Тогда	
		ЗначенияЗаполнения.Вставить("Родитель",ТекущиеДанные.СтруктураКомпании);
	КонецЕсли;
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения"   ,ЗначенияЗаполнения);
	ПараметрыОткрытия.Вставить("ДатаСозданияСтруктуры",ЭтаФорма.ДатаФормированияСтруктуры);
	
	ОткрытьФорму("Справочник.KPI_СтруктураКомпании.ФормаОбъекта", ПараметрыОткрытия , ЭтаФорма);
			
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаФормированияСтруктуры = ТекущаяДата();
	СформироватьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура РаскрытьВсеУровни()
	
	КоллекцияСтрок = ДеревоКомпании.ПолучитьЭлементы();
	Для Каждого стр Из КоллекцияСтрок Цикл
		Идентификатор = стр.ПолучитьИдентификатор();
		Элементы.ДеревоКомпании.Развернуть(Идентификатор, Истина);
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСтруктурыКомпании" Тогда
		СформироватьДерево();
		РаскрытьВсеУровни();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЭлементСтруктуры(Команда)    
	
	НайденныеИндексы = Неопределено;
	ТекущиеДанные = Элементы.ДеревоКомпании.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		УдалитьЭлементСтруктурыКомпанииНаСервере(ТекущиеДанные.СтруктураКомпании,
		ТекущиеДанные.Сотрудник,ЭтаФорма.ДатаФормированияСтруктуры);
		РаскрытьВсеУровни();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УдалитьЭлементСтруктурыКомпанииНаСервере(ЭлементСтруктуры,Сотрудник,Период)

	РегистрыСведений.KPI_СтруктураКомпании.УдалитьЭлементСтруктурыКомпании(ЭлементСтруктуры,Сотрудник,Период);
	СформироватьДерево();
		
КонецФункции

&НаКлиенте
Процедура ВостановитьСтруктуру(Команда)
	
	НайденныеИндексы = Неопределено;
	ТекущиеДанные = Элементы.ДеревоКомпании.ТекущиеДанные;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РодительПодразделения",ТекущиеДанные.СтруктураКомпании);
	ПараметрыОткрытия.Вставить("Период",ЭтаФорма.ДатаФормированияСтруктуры);
	ОткрытьФорму("РегистрСведений.KPI_СтруктураКомпании.Форма.ФормаВостановленияСтруктуры",ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ФилиалПриИзменении(Элемент)
	
	НайденныеИндексы = Неопределено;   
	СформироватьДерево();
    РаскрытьВсеУровни();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискНаименование(Команда)
	
	НайденныеИндексы = Неопределено;
	
	СформироватьДерево(ЭтаФорма.ОтборНаименование);
	РаскрытьВсеУровни();
	Элементы.ДеревоКомпанииПоискНаименование.Пометка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоискНаименование(Команда)
	
	НайденныеИндексы = Неопределено;
	СформироватьДерево();
	РаскрытьВсеУровни();
	Элементы.ДеревоКомпанииПоискНаименование.Пометка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиСледующийНаименованию(Команда)
	
	НайтиСтрокуДерева(1);	
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиПредыдущийНаименование(Команда)
	
	НайтиСтрокуДерева(-1);

КонецПроцедуры

&НаКлиенте
Процедура НайтиСтрокуДерева(НаправлениеПоиска = 1)
	
	 Если НайденныеИндексы = Неопределено Тогда
		НайденныеИндексы = Новый Массив;	
		НайтиСтрокиВхождений(ДеревоКомпании.ПолучитьЭлементы(),НайденныеИндексы);
		Если ЗначениеЗаполнено(НайденныеИндексы) Тогда
			Элементы.ДеревоКомпании.ТекущаяСтрока = НайденныеИндексы[0];
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(НайденныеИндексы) Тогда
			МаксимальныйИндекс    = НайденныеИндексы.ВГраница();
			ТекущиеДанные         = Элементы.ДеревоКомпании.ТекущиеДанные;
			ТекущаяПозицияПоиска  = Неопределено;
			Если НЕ ТекущиеДанные = Неопределено Тогда	
				ТекущаяПозицияПоиска = НайденныеИндексы.Найти(ТекущиеДанные.ПолучитьИдентификатор());
			КонецЕсли;
			Если НЕ ТекущаяПозицияПоиска = Неопределено Тогда
				Если НаправлениеПоиска = 1 И МаксимальныйИндекс = ТекущаяПозицияПоиска Тогда
					Элементы.ДеревоКомпании.ТекущаяСтрока = НайденныеИндексы[0];
				ИначеЕсли НаправлениеПоиска = -1 И ТекущаяПозицияПоиска = 0 Тогда
					Элементы.ДеревоКомпании.ТекущаяСтрока = НайденныеИндексы[МаксимальныйИндекс];
				Иначе 
					Элементы.ДеревоКомпании.ТекущаяСтрока = НайденныеИндексы[ТекущаяПозицияПоиска+НаправлениеПоиска];
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура НайтиСтрокиВхождений(СтрокиДерева,НайденныеИндексы)
	
	Для  Каждого Стр из СтрокиДерева Цикл
		Если Найти(ВРег(Стр.СтруктураКомпанииПредставление),ВРег(ЭтаФорма.ОтборНаименование)) Тогда
			НайденныеИндексы.Добавить(Стр.ПолучитьИдентификатор());
		КонецЕсли;
		НайтиСтрокиВхождений(Стр.ПолучитьЭлементы(),НайденныеИндексы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеПриИзменении(Элемент)
	
	НайденныеИндексы = Неопределено;
	
КонецПроцедуры







