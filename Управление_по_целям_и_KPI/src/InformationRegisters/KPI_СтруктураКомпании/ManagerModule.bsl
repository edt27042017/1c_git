//функция удаляет элемент структуры компании из регистра KPI_СтруктураКомпании
//Параметры: 
// ЭлементСтруктуры - тип СправочникСсылка.KPI_СтруктураКомпании
// Сотрудник        - тип справочникСсылка.KPI_Сотрудники
// Период           - тип дата
//Возращаемое значение:
//	нет
Функция УдалитьЭлементСтруктурыКомпании(ЭлементСтруктуры,Сотрудник,Период) Экспорт
		
	Отказ = Ложь;
	//Проверим Наличие подчиненых сотрдуников на текущую дата
	ПодчиненыеСотрудники = НаличиеПодчиненныхСотрудников(ЭлементСтруктуры,ТекущаяДата());
	Если ПодчиненыеСотрудники Тогда
		Отказ = Истина;
		KPI_ИнтерфейсКлиентСервер.СообщитьОбОшибке("Ошибка! На текущий период есть не снятые с должности сотрудники. Удаление не возможно.");
	КонецЕсли;
	
	Если Не Отказ Тогда
		//Проверим наличие подчиненых на выбранный период
		ПодчиненныеСотрудники = НаличиеПодчиненныхСотрудников(ЭлементСтруктуры,Период);
		Если ПодчиненыеСотрудники Тогда
			Отказ = Истина;
			KPI_ИнтерфейсКлиентСервер.СообщитьОбОшибке("Ошибка! За выбранный период не снятые с должности сотрудники. Удаление не возможно.");
		КонецЕсли;
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		СрезСтруктурыКомпании = СрезСтруктурыКомпании(ЭлементСтруктуры,Период);
		НачатьТранзакцию();		
			
		Пока СрезСтруктурыКомпании.Следующий() Цикл
			Запись                   = РегистрыСведений.KPI_СтруктураКомпании.СоздатьМенеджерЗаписи();
			Запись.Период            = СрезСтруктурыКомпании.Период;
			Запись.СтруктураКомпании = СрезСтруктурыКомпании.СтруктураКомпании;
			Запись.Прочитать();
			Запись.СтруктураУдалена = Истина;
			Запись.Записать();
		КонецЦикла;

		Если ТранзакцияАктивна() Тогда
			Попытка
				ОбъектЭлементаСтруктуры = ЭлементСтруктуры.ПолучитьОбъект();
				ОбъектЭлементаСтруктуры.ПометкаУдаления = Истина;
				ОбъектЭлементаСтруктуры.Записать();
			Исключение
				ОтменитьТранзакцию();
			КонецПопытки;
			
		КонецЕсли;
		
		Если ТранзакцияАктивна() Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

//функция востанавливает элемент структуры компании регистра KPI_СтруктураКомпании
//Параметры: 
// ЭлементСтруктуры - тип СправочникСсылка.KPI_СтруктураКомпании
// Родитель          - тип справочникСсылка.KPI_СтруктураКомпании
// Период            - тип дата
//Возращаемое значение:
//	Элемент востановлен - тип булево, Истина - элемент востановлен
Функция ВоостановитьЭлементСтруктурыКомпании(ЭлементСтруктуры,Родитель,Период) Экспорт
	
	ЭлементВостановленн = Ложь;
	
	НачатьТранзакцию();
	Попытка 
		Запись                   = РегистрыСведений.KPI_СтруктураКомпании.СоздатьМенеджерЗаписи();
		Запись.Период            = Период;
		Запись.СтруктураКомпании = ЭлементСтруктуры;
		
		ОбъектСтруктурыКомпании  = ЭлементСтруктуры.ПолучитьОбъект();
		ОбъектСтруктурыКомпании.Родитель        = Родитель;
		ОбъектСтруктурыКомпании.ПометкаУдаления = Ложь;
		ОбъектСтруктурыКомпании.Записать();
		
		Запись.Прочитать();
		Запись.СтруктураУдалена = Ложь;
		Запись.Записать();
		
	Исключение
		ОтменитьТранзакцию();
		ЭлементВостановленн = Ложь;
	КонецПопытки;
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
		ЭлементВостановленн = Истина;
	КонецЕсли;
	
	Возврат ЭлементВостановленн;
	
КонецФункции

Функция НаличиеПодчиненныхСотрудников(ЭлементСтруктуры,Период)
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	KPI_СтруктураКомпанииСрезПоследних.Период,
	|	KPI_СтруктураКомпанииСрезПоследних.СтруктураКомпании КАК СтруктураКомпании,
	|	KPI_СтруктураКомпанииСрезПоследних.Сотрудник
	|ИЗ
	|	РегистрСведений.KPI_СтруктураКомпании.СрезПоследних(
	|			&Период,
	|			СтруктураКомпании В ИЕРАРХИИ (&ЭлементСтруктуры)
	|				И Сотрудник <> ЗНАЧЕНИЕ(Справочник.KPI_Сотрудники.ПустаяСсылка)
	|				И НЕ СтруктураУдалена) КАК KPI_СтруктураКомпанииСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтруктураКомпании ИЕРАРХИЯ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЭлементСтруктуры",ЭлементСтруктуры);
	Запрос.УстановитьПараметр("Период",Период);
	
	Подчиненные = НЕ Запрос.Выполнить().Пустой();
	
	Возврат Подчиненные;
	
КонецФункции

//функция получает срез структуры компании из РС "KPI_СтруктураКомпании"
//Параметры: 
// ЭлементСтруктуры  - тип СправочникСсылка.KPI_СтруктураКомпании
// Период            - тип дата
// УдаленныеЭлементы - тип булево, срез включает удаленные элементы
// Таблицей          - тип булево, вернуть срез таблицей значений
//Возрощаемое значение:
//	нет
Функция СрезСтруктурыКомпании(ЭлементСтруктуры,Период,УдаленныеЭлементы = Ложь, Таблицей = Ложь) Экспорт
		
	ТекстЗапроса = "ВЫБРАТЬ
	               |	KPI_СтруктураКомпанииСрезПоследних.Период,
	               |	KPI_СтруктураКомпанииСрезПоследних.СтруктураКомпании КАК СтруктураКомпании,
	               |	KPI_СтруктураКомпанииСрезПоследних.Сотрудник
	               |ИЗ
	               |	РегистрСведений.KPI_СтруктураКомпании.СрезПоследних(
	               |			&Период,
	               |			СтруктураКомпании В ИЕРАРХИИ (&ЭлементСтруктуры)
	               |				И СтруктураУдалена = &УдаленныеЭлементы) КАК KPI_СтруктураКомпанииСрезПоследних
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СтруктураКомпании ИЕРАРХИЯ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЭлементСтруктуры",ЭлементСтруктуры);
	Запрос.УстановитьПараметр("Период",Период);
	Запрос.УстановитьПараметр("УдаленныеЭлементы",УдаленныеЭлементы);
	
	Если Таблицей Тогда
		Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);	
	Иначе 
		Возврат Запрос.Выполнить().Выбрать();
	КонецЕсли;
		
КонецФункции