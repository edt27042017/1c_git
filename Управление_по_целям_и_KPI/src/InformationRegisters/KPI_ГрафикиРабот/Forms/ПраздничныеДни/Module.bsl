
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Год") Тогда
		ЭтаФорма.Год = Параметры.Год;	
	КонецЕсли;
	Год        = Год(ТекущаяДата());
	
КонецПроцедуры

&НаСервере
Процедура ПриИзменениеГодаСервер()
	
	НачалоГода = Дата(Формат(Год,"ЧГ=")+"0101");
	КонецГода  = Дата(Формат(Год,"ЧГ=")+"1231");
	
	Элементы.Календарь.НачалоПериодаОтображения = НачалоГода;
	Элементы.Календарь.КонецПериодаОтображения  = КонецГода;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьВидДня(Дата,ПредставлениеВидДня)
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		KPI_ИнтерфейсКлиентСервер.СообщитьОбОшибке("Ошибка! Не указана изменяемая дата.");
	КонецЕсли;
	
	ВидДня = Неопределено;	
	Если ПредставлениеВидДня = "Выходной" Тогда
		ВидДня = Перечисления.KPI_ВидыДнейГрафика.Выходной;
	ИначеЕсли ПредставлениеВидДня = "Предпраздничный" Тогда
		ВидДня = Перечисления.KPI_ВидыДнейГрафика.Предпраздничный;
	ИначеЕсли 	ПредставлениеВидДня = "Праздничный" Тогда
		ВидДня = Перечисления.KPI_ВидыДнейГрафика.Праздник;
	ИначеЕсли 	ПредставлениеВидДня = "Рабочий" Тогда
		ВидДня = Перечисления.KPI_ВидыДнейГрафика.Рабочий;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидДня) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписиШаблона = РегистрыСведений.KPI_ГрафикиРабот.СоздатьНаборЗаписей();
	ЗаписиШаблона.Отбор.Дата.Установить(Дата);
	ЗаписиШаблона.Отбор.ГрафикРаботы.Установить(Справочники.KPI_ГрафикиРабот.ПустаяСсылка());
	ЗаписиШаблона.Прочитать();
	ЗаписиШаблона.Очистить();
	ЗаписьШаблона = ЗаписиШаблона.Добавить();
	ЗаписьШаблона.Дата = Дата;
	ЗаписьШаблона.ВидДня = ВидДня;
	ЗаписиШаблона.Записать();
	
	
	
КонецПроцедуры

&НаКлиенте
Функция ДатаКалендаря()
	
	Даты =Элементы.Календарь.ВыделенныеДаты;
	Если ЗначениеЗаполнено(Даты) тогда
		Возврат Даты[0];
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьВидДняВыходной(Команда)
	
	ИзменитьВидДня(ДатаКалендаря(),"Выходной");
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидДняПраздничный(Команда)
	
	ИзменитьВидДня(ДатаКалендаря(),"Праздничный");
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидДняПредпраздничный(Команда)
	
	ИзменитьВидДня(ДатаКалендаря(),"Предпраздничный");
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидДняРабочий(Команда)
	
	ИзменитьВидДня(ДатаКалендаря(),"Рабочий");
	
КонецПроцедуры

//&НаСервере
//Функция ОформитьДниКалендаря(ОформлениеПериода)
//	
//	ТекстЗапроса = "ВЫБРАТЬ
//	|	KPI_ГрафикиРабот.Дата,
//	|	KPI_ГрафикиРабот.ВидДня
//	|ИЗ
//	|	РегистрСведений.KPI_ГрафикиРабот КАК KPI_ГрафикиРабот
//	|ГДЕ
//	|	KPI_ГрафикиРабот.ГрафикРаботы = ЗНАЧЕНИЕ(Справочник.KPI_ГрафикиРабот.ПустаяСсылка)
//	|	И KPI_ГрафикиРабот.Дата МЕЖДУ &НачалоПериода И &КонецПериода";	
//	Запрос = Новый Запрос(ТекстЗапроса);
//	Выборка = Запрос.Выполнить().Выбрать();

//	
//	КритерийПоиска  = Новый Структура("Дата");
//	Выходной        = Перечисления.KPI_ВидыДнейГрафика.Выходной;
//	Праздник        = Перечисления.KPI_ВидыДнейГрафика.Праздник;
//	Предпраздничный = Перечисления.KPI_ВидыДнейГрафика.Предпраздничный;

//	Для Каждого ВыводимаяДата из ОформлениеПериода.Дата Цикл
//		Если Выборка.НайтиСледующий(КритерийПоиска) Тогда
//			Если Выборка.ВидДня = Выходной Тогда
//				ВыводимаяДата.ЦветФона = Новый Цвет(255, 0, 0);
//			ИначеЕсли Выборка.ВидДня = Предпраздничный Тогда
//				ВыводимаяДата.ЦветФона = Новый Цвет(255, 0, 0);
//			ИначеЕсли Выборка.ВидДня = Праздник Тогда
//				ВыводимаяДата.ЦветФона = Новый Цвет(255, 0, 0);
//			КонецЕсли;
//			
//		КонецЕсли;
//		
//		Выборка.Сбросить();
//		
//	КонецЦикла;
//		
//		
//КонецФункции
  
&НаКлиенте
Процедура ЗаписатьЗакрыть(Команда)
	
	Закрыть();	
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	
	ПриИзменениеГодаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЭтаФорма.Год = ЭтаФорма.Год + Направление;
	ПриИзменениеГодаСервер();
	
КонецПроцедуры
