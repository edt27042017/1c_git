
&НаКлиенте
Процедура ОбъектУправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(КонецПериода) Тогда
		Сообщить("Не заполнен период");
		Возврат;
	КонецЕсли;
	
	ОбъектУправленияОписание = KPI_ОбщегоНазначения.ОбработкаВыбораПолучитьСтруктуруКомпанииНаДату(КонецПериода, ЭтаФорма, СтандартнаяОбработка, , ОбъектУправления);
	
	Если ЗначениеЗаполнено(ОбъектУправленияОписание) Тогда
		ОбъектУправления                = ОбъектУправленияОписание.СтруктураКомпании;
		ОбъектУправленияПредставление   = ОбъектУправленияОписание.СтруктураКомпанииПредставление;
		УстановитьПараметр("ОбъектУправления",ОбъектУправления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОтчетОбъект      = РеквизитФормыВЗначение("Отчет");
	
	МетаданныеОтчета = ОтчетОбъект.Метаданные();
    Заголовок        = МетаданныеОтчета.Синоним;
	
	Если МетаданныеОтчета.Реквизиты.Найти("Период") = Неопределено Тогда
		Элементы.НачалоПериода.Видимость = Истина;
		Элементы.КонецПериода.Заголовок = "Конец периода";
	Иначе
		Элементы.НачалоПериода.Видимость = Ложь;
		Элементы.КонецПериода.Заголовок = "Период";
	КонецЕсли;
	
	Если МетаданныеОтчета.Реквизиты.Найти("ПериодичностьПланирования") = Неопределено Тогда
		 Элементы.ПериодичностьПланирования.Видимость = Ложь;
	 Иначе 
		 Элементы.ПериодичностьПланирования.Видимость = Истина;
	КонецЕсли;
	
	КлючОбъекта      = "Отчет."+МетаданныеОтчета.Имя;
	ИмяПользователя  = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Отбор            = Новый Структура;
	Отбор.Вставить("КлючОбъекта"  , КлючОбъекта);
	Отбор.Вставить("КлючНастроек" , "НастройкиОтчета");
	Отбор.Вставить("Пользователь" , ИмяПользователя);
	ОписаниеНастроек = ХранилищеОбщихНастроек.Выбрать(Отбор);
	
	Если ОписаниеНастроек.Следующий() 
		И ТипЗнч(ОписаниеНастроек.Настройки) = Тип("НастройкиКомпоновкиДанных") Тогда
		Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(ОписаниеНастроек.Настройки);
	КонецЕсли;	
	
	Настройки        = Отчет.КомпоновщикНастроек.Настройки;
	ПараметрыДанных  = Настройки.ПараметрыДанных;
	
	ИменаПараметровДанных = Новый Структура;
	ИменаПараметровДанных.Вставить("НачалоПериода"             , "НачалоПериода");
	ИменаПараметровДанных.Вставить("КонецПериода"              , "КонецПериода");
	ИменаПараметровДанных.Вставить("Период"                    , "КонецПериода");
	ИменаПараметровДанных.Вставить("ОбъектУправления"          , "ОбъектУправления");
	ИменаПараметровДанных.Вставить("ПериодичностьПланирования" , "ПериодичностьПланирования");
	
	Для Каждого Параметр из ИменаПараметровДанных Цикл
		
		ИскомыйПараметр   = Новый ПараметрКомпоновкиДанных(Параметр.Ключ);
		НайденныйПараметр = ПараметрыДанных.НайтиЗначениеПараметра(ИскомыйПараметр);
		Если Параметры.Свойство(Параметр.Ключ) Тогда
			ЭтаФорма[Параметр.Значение] = Параметры[Параметр.Ключ];
			ИскомыйПараметр = Новый ПараметрКомпоновкиДанных(Параметр.Ключ);
			НайденныйПараметр = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ИскомыйПараметр);
			Если НЕ НайденныйПараметр = Неопределено Тогда
				Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(Параметр.Ключ,Параметры[Параметр.Ключ]);
			КонецЕсли;
			
			Продолжить;
		ИначеЕсли НЕ НайденныйПараметр = Неопределено Тогда
			ЭтаФорма[Параметр.Значение] = НайденныйПараметр.Значение;
		КонецЕсли;
			
	КонецЦикла;

	Если НЕ (Параметры.Свойство("КонецПериода") ИЛИ Параметры.Свойство("Период")) Тогда
		ЭтаФорма.КонецПериода = ТекущаяДата();	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ПериодичностьПланирования) Тогда
		ЭтаФорма.ПериодичностьПланирования = Перечисления.KPI_ПериодичностьПланирования.Месяц;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтаФорма.КонецПериода) Тогда
		ГраницыПериода = KPI_ОбщегоНазначенияСервер.ГраницыПериода(ЭтаФорма.КонецПериода, ЭтаФорма.ПериодичностьПланирования);
		ЭтаФорма.НачалоПериода = ГраницыПериода.НачалоПериода;
		ЭтаФорма.КонецПериода  = ГраницыПериода.КонецПериода;
	КонецЕсли;
	
	Если Не Параметры.Свойство("РежимРасшифровки") 
		И Не ЗначениеЗаполнено(Параметры.ОбъектУправления) Тогда
		ЭтаФорма.ОбъектУправления = ПараметрыСеанса.KPI_ТекущийСотрудник.СтруктураКомпании;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтаФорма.ОбъектУправления) Тогда
		ОбъектУправленияПредставление  = KPI_ОбщегоНазначенияСервер.ПолучитьПредставлениеПоСтруктуреКомпанииНаДату(ОбъектУправления,КонецПериода);
	КонецЕсли;
	
	Если Параметры.Свойство("РежимРасшифровки") Тогда
		СформироватьОтчетСервер();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	УстановитьПараметр("НачалоПериода",НачалоПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	Если Элементы.НачалоПериода.Видимость Тогда
		УстановитьПараметр("КонецПериода",КонецПериода);
	Иначе
	    УстановитьПараметр("Период",КонецПериода);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПланированияПриИзменении(Элемент)
	
	УстановитьПараметр("ПериодичностьПланирования",ПериодичностьПланирования);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметр(ИмяПараметра,Значение)
	
	Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(ИмяПараметра,Значение);
	
	ОтчетНеСформирован();
	 
КонецПроцедуры

&НаКлиенте
Процедура ОтчетНеСформирован()
	
	ОтображениеСостояния = Элементы.Результат.ОтображениеСостояния;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	ОтображениеСостояния.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	СформироватьОтчетСервер();	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетСервер()
	
	ПараметрыДанных = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных;
	Если НЕ ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода")) = Неопределено Тогда
		ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериода",ЭтаФорма.КонецПериода);
		ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода",ЭтаФорма.НачалоПериода);
	Иначе 
		ПараметрыДанных.УстановитьЗначениеПараметра("Период",ЭтаФорма.КонецПериода);
	КонецЕсли;
	ПараметрыДанных.УстановитьЗначениеПараметра("ОбъектУправления",ЭтаФорма.ОбъектУправления);
	Если НЕ ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодичностьПланирования")) = Неопределено Тогда
		ПараметрыДанных.УстановитьЗначениеПараметра("ПериодичностьПланирования",ЭтаФорма.ПериодичностьПланирования);
	КонецЕсли;

	ОтчетОбъект     = РеквизитФормыВЗначение("Отчет");
	
	ОтчетОбъект.СкомпоноватьРезультат(Результат,ДанныеРасшифровки);
	
	КлючОбъекта     = "Отчет." + ОтчетОбъект.Метаданные().Имя;
	НастройкиОтчета = Отчет.КомпоновщикНастроек.Настройки;
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	
	ХранилищеОбщихНастроек.Сохранить(КлючОбъекта,"НастройкиОтчета",НастройкиОтчета,,ИмяПользователя);
	
	ОтображениеСостояния = Элементы.Результат.ОтображениеСостояния;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
	ОтображениеСостояния.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

