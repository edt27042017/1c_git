&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Дата              = НачалоМесяца(ТекущаяДата());
		Объект.МесяцНачисления   = НачалоМесяца(Объект.Дата);
	КонецЕсли;
	ЭтаФорма.МесяцНачисления = KPI_ИнтерфейсВызовСервера.ПредставлениеПериодаПланирования(Объект.МесяцНачисления,Перечисления.KPI_ПериодичностьПланирования.Месяц);
	ОбновитьПредставленияИнтервалов();
	УстановитьПредставлениеПериодаНачисления();
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Объект.МесяцНачисления   = ДобавитьМесяц(Объект.МесяцНачисления, Направление);
	ЭтаФорма.МесяцНачисления = KPI_ИнтерфейсВызовСервера.ПредставлениеПериодаПланирования(Объект.МесяцНачисления,ПредопределенноеЗначение("Перечисление.KPI_ПериодичностьПланирования.Месяц"));
	
	РассчитатьПериодНачисления();
	ОбновитьПредставленияИнтервалов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	ПериодНачисления = "";
	ОбновитьПредставленияИнтервалов();
	РассчитатьПериодНачисления();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставленияИнтервалов()
	
	Если Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.День
		Или Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.Неделя Тогда
	
		ПредставленияИнтервалов = ПредставленияИнтервалов(Объект.МесяцНачисления, Объект.Периодичность);	
		Элементы.ПериодНачисления.СписокВыбора.ЗагрузитьЗначения(ПредставленияИнтервалов);
		Элементы.ПериодНачисления.Видимость = Истина;
		
		Если ПустаяСтрока(ПериодНачисления) Тогда
			ПериодНачисления = ПредставленияИнтервалов[0];
		Иначе
			НомерПредставления = СокрЛП(Лев(ПериодНачисления, 2));
			
			Попытка
				НомерПредставления = Число(НомерПредставления);
			Исключение
				НомерПредставления = 1;
			КонецПопытки;
			
			Если НомерПредставления > День(КонецМесяца(Объект.МесяцНачисления)) Тогда
				НомерПредставления = День(КонецМесяца(Объект.МесяцНачисления));
			КонецЕсли;
			
			Если Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.Неделя И НомерПредставления > ПредставленияИнтервалов.Количество() Тогда
				ПериодНачисления = ПредставленияИнтервалов[ПредставленияИнтервалов.Количество() - 1];
			Иначе
				ПериодНачисления = ПредставленияИнтервалов[НомерПредставления - 1];
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.ПериодНачисления.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредставленияИнтервалов(МесяцНачисления, Периодичность)
	ПредставленияИнтервалов = Новый Массив;
	
	Если Периодичность = Перечисления.KPI_ПериодичностьПланирования.Неделя Тогда
		
		НачалоНедели = НачалоМесяца(МесяцНачисления);
		ДатаОкончания = КонецМесяца(МесяцНачисления);
		
		Инд = 1;
		Пока НачалоНедели < ДатаОкончания Цикл
			КонецНедели = КонецНедели(НачалоНедели);
			
			Если КонецНедели > ДатаОкончания Тогда
				КонецНедели = ДатаОкончания;
			КонецЕсли;
			
			Представление = "%номернедели% (%начало% - %конец%)";
			Представление = СтрЗаменить(Представление, "%номернедели%", Инд);
			Представление = СтрЗаменить(Представление, "%начало%", Формат(НачалоНедели, "ДЛФ = Д"));
			Представление = СтрЗаменить(Представление, "%конец%",  Формат(КонецНедели,  "ДЛФ = Д"));
			ПредставленияИнтервалов.Добавить(Представление);
			
			НачалоНедели = КонецНедели + 1;		
			Инд = Инд + 1;
		КонецЦикла;
		
	ИначеЕсли Периодичность = Перечисления.KPI_ПериодичностьПланирования.День Тогда
		
		Для НомерДня = 1 по KPI_ИнтерфейсКлиентСервер.КоличествоДнейМесяца(МесяцНачисления) Цикл
			ПредставленияИнтервалов.Добавить(Прав("0"+НомерДня, 2));	
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ПредставленияИнтервалов;
КонецФункции
 
&НаКлиенте
Процедура ЗаполнитьПлановымиНачислениям(Команда)
	
	Если Объект.Начисления.Количество() Тогда
		ТекстВопроса = "Табличная часть ""Начисления"" будет очищена. Продолжить?";
		Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьПлановымиНачислениямиСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПлановымиНачислениямиСервер(ОбъектУправленияОписание = Неопределено)
	
	Если ОбъектУправленияОписание = Неопределено Тогда
		ПараметрыЗаполнения = Новый Структура("Филиал",Объект.Филиал);
		ПлановыеНачисления = KPI_ИнтерфейсСервер.СрезПлановыхНачисленийОбъектаУправления(КонецМесяца(Объект.МесяцНачисления),,,ПараметрыЗаполнения);
		ПлановыеНачисления.ЗаполнитьЗначения(НачалоМесяца(Объект.МесяцНачисления), "НачалоПериода" );
		ПлановыеНачисления.ЗаполнитьЗначения(КонецМесяца(Объект.МесяцНачисления) , "КонецПериода"  );
		Объект.Начисления.Загрузить(ПлановыеНачисления);
	Иначе
		ПлановыеНачисления = KPI_ИнтерфейсСервер.СрезПлановыхНачисленийОбъектаУправления(
		НачалоМесяца(Объект.МесяцНачисления),ОбъектУправленияОписание.Сотрудник,Ложь);
		
		КритерийПоиска = Новый Структура("Сотрудник",ОбъектУправленияОписание.Сотрудник);
		УдаляемыеСтроки = Объект.Начисления.НайтиСтроки(КритерийПоиска);
		Для Каждого УдаляемаяСтрока из УдаляемыеСтроки Цикл
			Объект.Начисления.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		  
		Пока ПлановыеНачисления.Следующий() Цикл
			НоваяСтрокаНачислений = Объект.Начисления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаНачислений,ПлановыеНачисления);
			НоваяСтрокаНачислений.НачалоПериода =  НачалоМесяца(Объект.МесяцНачисления);
			НоваяСтрокаНачислений.КонецПериода  =  КонецМесяца(Объект.МесяцНачисления);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьТекущуюСтроку(Команда)
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		KPI_ИнтерфейсКлиентСервер.СообщитьОбОшибке("Ошибка! Не выбрана строка начислений.");
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
		Если Вопрос("Для расчета начислений необходимо записать документ. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		РассчитатьТекущуюСтрокуСервер(ТекущиеДанные.ПолучитьИдентификатор());
	Исключение
		Сообщить(ОписаниеОшибки());
		ЭтаФорма.Прочитать();
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьТекущуюСтрокуСервер(ИдентификаторСтроки)
	
	  мОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.KPI_НачисленияСотрудников"));
	  ТекущиеНачисление = Объект.Начисления.НайтиПоИдентификатору(ИдентификаторСтроки);
	  
	  ПараметрыРасчета = Новый Структура("ОбъектУправления", ТекущиеНачисление.Сотрудник);
	  ПараметрыРасчета.Вставить("ВидНачисления", ТекущиеНачисление.ВидНачисления);
	  мОбъект.РассчитатьНачисление(ПараметрыРасчета);
	  
	  ЗначениеВДанныеФормы(мОбъект, Объект);

КонецПроцедуры

&НаКлиенте
Процедура НачисленияСотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОбъектУправленияОписание = KPI_ОбщегоНазначения.ОбработкаВыбораПолучитьСтруктуруКомпанииНаДату(КонецМесяца(Объект.МесяцНачисления), Элемент, СтандартнаяОбработка, ,ТекущиеДанные.Сотрудник );
	
	Если ЗначениеЗаполнено(ОбъектУправленияОписание) Тогда
		ТекущиеДанные.Сотрудник = ОбъектУправленияОписание.Сотрудник;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодборомСотрудников(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЗакрыватьПриВыборе",Ложь);
	ДополнительныеПараметры.Вставить("Филиал",Объект.Филиал);
	KPI_ОбщегоНазначения.ОбработкаВыбораПолучитьСтруктуруКомпанииНаДату(КонецМесяца(Объект.МесяцНачисления), Элементы.Начисления,,,,ДополнительныеПараметры);
		
КонецПроцедуры

&НаКлиенте
Процедура НачисленияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") И 
		ВыбранноеЗначение.Свойство("Сотрудник") Тогда
		
		КритерийПоиска = Новый Структура("Сотрудник",ВыбранноеЗначение.Сотрудник);
		Если Объект.Начисления.НайтиСтроки(КритерийПоиска).Количество() Тогда
			ТекстВопроса = "По сотруднику " + ВыбранноеЗначение.СтруктураКомпанииПредставление + " есть начисления. Перезаполнить?";
			Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьПлановымиНачислениямиСервер(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	Если НоваяСтрока и Не Копирование Тогда
		ТекущиеДанные.НачалоПериода = НачалоМесяца(Объект.МесяцНачисления);
		ТекущиеДанные.КонецПериода  = КонецМесяца(Объект.МесяцНачисления);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьПериодНачисления(НомерПредставления = 0)
	
	Если НомерПредставления = 0 Тогда
		НомерПредставления = СокрЛП(Лев(ПериодНачисления, 2));
		Попытка
			НомерПредставления = Число(НомерПредставления);
		Исключение
			НомерПредставления = 1;
		КонецПопытки;
	КонецЕсли;
			
	Если Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.Год Тогда
		
		Объект.МесяцНачисления = НачалоМесяца(Объект.МесяцНачисления);
		Объект.НачалоПериода = НачалоГода(Объект.МесяцНачисления);
		Объект.КонецПериода = КонецГода(Объект.МесяцНачисления);
		
	ИначеЕсли Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.Полугодие Тогда
		
		Объект.МесяцНачисления = НачалоМесяца(Объект.МесяцНачисления);
		НомерМесяца = Месяц(Объект.МесяцНачисления);
		
		Объект.НачалоПериода = НачалоГода(Объект.МесяцНачисления);
		Если НомерМесяца >= 6 Тогда
			Объект.НачалоПериода = ДобавитьМесяц(Объект.НачалоПериода, 6);
		КонецЕсли;
		
		Объект.КонецПериода = КонецГода(Объект.МесяцНачисления);
		Если НомерМесяца < 6 Тогда
			Объект.КонецПериода = ДобавитьМесяц(Объект.КонецПериода, -6);
		КонецЕсли;
		
	ИначеЕсли Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.Квартал Тогда
		
		Объект.МесяцНачисления = НачалоМесяца(Объект.МесяцНачисления);
		Объект.НачалоПериода = НачалоКвартала(Объект.МесяцНачисления);
		Объект.КонецПериода = КонецКвартала(Объект.МесяцНачисления);
		
	ИначеЕсли Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.Месяц Тогда
		
		Объект.МесяцНачисления = НачалоМесяца(Объект.МесяцНачисления);
		Объект.НачалоПериода = Объект.МесяцНачисления;
		Объект.КонецПериода = КонецМесяца(Объект.МесяцНачисления);
		
	ИначеЕсли Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.Неделя Тогда
		
		Объект.МесяцНачисления = НачалоМесяца(Объект.МесяцНачисления);
		
		Сч = 1;
		Пока Сч < НомерПредставления Цикл
			Объект.МесяцНачисления = КонецНедели(Объект.МесяцНачисления) + 1;
			Сч = Сч + 1;
		КонецЦикла;
		
		Объект.НачалоПериода = НачалоНедели(Объект.МесяцНачисления);
		Если Месяц(Объект.МесяцНачисления) <> Месяц(Объект.НачалоПериода) Тогда
			Объект.НачалоПериода = КонецМесяца(Объект.НачалоПериода) + 1;
		КонецЕсли;
		
		Объект.КонецПериода = КонецНедели(Объект.МесяцНачисления);
		Если Месяц(Объект.МесяцНачисления) <> Месяц(Объект.НачалоПериода) Тогда
			Объект.КонецПериода = НачалоМесяца(Объект.КонецПериода) - 1;
		КонецЕсли;
				
	ИначеЕсли Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.День Тогда
		
		Если НомерПредставления > День(КонецМесяца(Объект.МесяцНачисления)) Тогда
			НомерПредставления = День(КонецМесяца(Объект.МесяцНачисления));
		КонецЕсли;
		
		Объект.МесяцНачисления = НачалоМесяца(Объект.МесяцНачисления) + 86400 * (НомерПредставления - 1);
		Объект.НачалоПериода = Объект.МесяцНачисления;
		Объект.КонецПериода = Объект.МесяцНачисления;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Модифицированность = Истина;
	
	НомерПредставления = СокрЛП(Лев(ВыбранноеЗначение, 2));
	Попытка
		НомерПредставления = Число(НомерПредставления);
	Исключение
		НомерПредставления = 1;
	КонецПопытки;
	
	РассчитатьПериодНачисления(НомерПредставления);
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеПериодаНачисления()
	
	Если Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.День Тогда
		
		ИндексПредставления = День(Объект.НачалоПериода) - 1;
		ПериодНачисления = Элементы.ПериодНачисления.СписокВыбора[ИндексПредставления];
		
	ИначеЕсли Объект.Периодичность = Перечисления.KPI_ПериодичностьПланирования.Неделя Тогда
		
		ИндексПредставления = НеделяГода(Объект.МесяцНачисления) - НеделяГода(НачалоМесяца(Объект.МесяцНачисления));
		ПериодНачисления = Элементы.ПериодНачисления.СписокВыбора[ИндексПредставления];
		
	Иначе
		
		ПериодНачисления = "";
		
	КонецЕсли;

КонецПроцедуры
