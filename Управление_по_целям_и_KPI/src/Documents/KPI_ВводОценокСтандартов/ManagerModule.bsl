//Функция записи оценок стандартов
//Параметры:
// ОбъектУправления - тип СправочникСсылка.KPI_СтруктураКомпании
// Дата             - тип Дата, дата на котрую записываются оценки
// Стандарты        - таблица значений, оцениваемые стндарты
//Возвращаемое значение:
// Нет
Функция ЗаписатьОценкиСтандартов(ОбъектУправления,Дата,Стандарты) Экспорт
	
	Стандарты.Колонки.Добавить("ЗначениеЗаписано");
	Стандарты.ЗаполнитьЗначения(Ложь,"ЗначениеЗаписано");
	
	СтрокиРегистраторы = Новый Массив;
	
	Для Каждого Стр из Стандарты Цикл 
		//проверим что ранее не записали данные из этой строки
		Если НЕ Стр.ЗначениеЗаписано Тогда
			Попытка
				//Получим ранее созданный документ
				//или создадим новый, если оценки еще не вводились
				
				Если ЗначениеЗаполнено(Стр.ДокументВводОценокСтандартов) Тогда
					ДокументВводОценокСтандартов = Стр.ДокументВводОценокСтандартов.ПолучитьОбъект();
				Иначе
					
					ДанныеЗаполнения = Новый Структура("СтруктураКомпании,Дата,АвторДокументаСтруктураКомпании,АвторДокументаСотрудник,ПериодичностьПланирования,Комментарий");
					ДанныеЗаполнения.СтруктураКомпании               = ОбъектУправления;
					ДанныеЗаполнения.Дата                            = Дата;
					ДанныеЗаполнения.АвторДокументаСтруктураКомпании = Стр.ОтветственныйСтруктураКомпании;
					ДанныеЗаполнения.АвторДокументаСотрудник         = Стр.ОтветственныйСотрудник;
					ДанныеЗаполнения.ПериодичностьПланирования       = Стр.Основание.ПериодичностьПланирования;
				
					ДокументВводОценокСтандартов    = Документы.KPI_ВводОценокСтандартов.СоздатьДокумент();
					ДокументВводОценокСтандартов.Заполнить(ДанныеЗаполнения);
									
				КонецЕсли;//P.S не самая красивая часть алгоритма        
				
				// Найдем строки в которых использован документ "KPI_ВводОценокСтандартов"
				// т.к. в одном документе вводятся оценки только одного ответсвенного то
				// в условии поиска ограничимся ссылкой регистратора 
				КритерийПоиска = Новый Структура("ДокументВводОценокСтандартов,Ответственный",Стр.ДокументВводОценокСтандартов,Стр.Ответственный);
				СтрокиРегистратор = Стандарты.НайтиСтроки(КритерийПоиска);
				
				//Выгрузим табличную часть "Оценки" документа 
				ОценкиСтандартов = ДокументВводОценокСтандартов.Оценки.Выгрузить();
				
				//И заполним данные табличной части из таблицы стандартов
				Для Каждого СтрокаРегистратор из СтрокиРегистратор Цикл
					Если ЗначениеЗаполнено(СтрокаРегистратор.ОценкаСтандарта) Тогда
						
						//Проверим что в тч ранее не проставлялась оценка
						КритерийПоискаОценки = Новый Структура("Стандарт,ДатаОценки",СтрокаРегистратор.Стандарт,СтрокаРегистратор.ДатаОценки);
						
						СтрокиОценки = ОценкиСтандартов.НайтиСтроки(КритерийПоискаОценки);
						Если ЗначениеЗаполнено(СтрокиОценки) Тогда
							//если проставлялась то получим строку из ТЧ
							СтрокаОценки = СтрокиОценки[0];
						Иначе
							//Иначе добавим новую строку
							СтрокаОценки = ОценкиСтандартов.Добавить();
						КонецЕсли;
						//Заполним строку ТЧ данными из таблицы стандартов
						ЗаполнитьЗначенияСвойств(СтрокаОценки,СтрокаРегистратор);
						СтрокаОценки.ВесОтветственного = СтрокаРегистратор.ВесОценкиОтветственного;
						СтрокаОценки.Оценка            = СтрокаРегистратор.ОценкаСтандарта;
						
					КонецЕсли;
					
					//проставим флаг, что бы на следующих итерациях не использовать данную строку
					СтрокиРегистраторы.Добавить(СтрокаРегистратор);
					СтрокаРегистратор.ЗначениеЗаписано             = Истина;
					
				КонецЦикла;
				
				//Проверим Оценки Проставленны
				Если ЗначениеЗаполнено(ОценкиСтандартов) Тогда
					//загрузим сформировааные данные ТЧ
					ДокументВводОценокСтандартов.Оценки.Загрузить(ОценкиСтандартов);
					// И попытаемся записать
					ДокументВводОценокСтандартов.Записать(РежимЗаписиДокумента.Проведение);
					//Если выяснлось что ранее созданный документ пуст то пометим его на удаление
				ИначеЕсли ЗначениеЗаполнено(ДокументВводОценокСтандартов.Ссылка) Тогда
					ДокументВводОценокСтандартов.УстановитьПометкуУдаления(Истина);
				КонецЕсли;
				
				Для Каждого Строка из СтрокиРегистраторы Цикл
					 Строка.ДокументВводОценокСтандартов = ДокументВводОценокСтандартов.Ссылка;
				КонецЦикла;
				
			Исключение
				ТекстОшибки = "Ошибка! Не удалось записать оценки сотрудника %сотрудник%. " + ОписаниеОшибки();
				ТекстОшибки = СтрЗаменить(ТекстОшибки,"%сотрудник%",ОбъектУправления);
				KPI_ИнтерфейсКлиентСервер.СообщитьОбОшибке(ТекстОшибки);
			КонецПопытки;
		КонецЕсли;

	КонецЦикла;
	
	Стандарты.Колонки.Удалить("ЗначениеЗаписано");
	
КонецФункции

