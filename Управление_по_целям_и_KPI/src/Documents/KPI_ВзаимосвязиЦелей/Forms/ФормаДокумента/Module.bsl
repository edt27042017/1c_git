&НаКлиенте
Перем мКолвоСтрокЗависимыхЦелей, мКолвоСтрокЗависимыхЦП;


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	мКолвоСтрокЗависимыхЦелей = Объект.ЗависимыеЦели.Количество();
	мКолвоСтрокЗависимыхЦП = Объект.ЗависимыеЦелевыеПоказатели.Количество();
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьЗависимуюЦель(Команда)
	Если Элементы.Цели.ТекущиеДанные <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(Элементы.Цели.ТекущиеДанные.Цель) Тогда
			Сообщить("Значение цели в списке целей не заполнено");
			Возврат;
		КонецЕсли;
		
		НовСтр = Объект.ЗависимыеЦели.Добавить();
		НовСтр.Цель = Элементы.Цели.ТекущиеДанные.Цель;
		
		ОбновитьСтрокиЗависимыхЦелей(Элементы.Цели.ТекущиеДанные.Цель);
		
		Элементы.ЗависимыеЦели.ТекущаяСтрока = мКолвоСтрокЗависимыхЦелей;
		Элементы.ЗависимыеЦели.ИзменитьСтроку();
		
		мКолвоСтрокЗависимыхЦелей = мКолвоСтрокЗависимыхЦелей + 1;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьЗависимыйЦП(Команда)
	Если Элементы.Цели.ТекущиеДанные <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(Элементы.Цели.ТекущиеДанные.Цель) Тогда
			Сообщить("Значение цели в списке целей не заполнено");
			Возврат;
		КонецЕсли;
		
		НовСтр = Объект.ЗависимыеЦелевыеПоказатели.Добавить();
		НовСтр.Цель = Элементы.Цели.ТекущиеДанные.Цель;
		
		ОбновитьСтрокиЗависимыхЦП(Элементы.Цели.ТекущиеДанные.Цель);
		
		Элементы.ЗависимыеЦелевыеПоказатели.ТекущаяСтрока = мКолвоСтрокЗависимыхЦП;
		Элементы.ЗависимыеЦелевыеПоказатели.ИзменитьСтроку();
		
		мКолвоСтрокЗависимыхЦП = мКолвоСтрокЗависимыхЦП + 1;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЦелиПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ОбновитьСтрокиЗависимыхЦелей(Элемент.ТекущиеДанные.Цель);
		ОбновитьСтрокиЗависимыхЦП(Элемент.ТекущиеДанные.Цель);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСтрокиЗависимыхЦелей(Цель)
	Если Элементы.Цели.ТекущиеДанные <> Неопределено Тогда 
		ПараметрыОтбора = Новый Структура("Цель", Цель);
		Элементы.ЗависимыеЦели.ОтборСтрок = Новый ФиксированнаяСтруктура(ПараметрыОтбора);	
		
		Элементы.ЗависимыеЦели.Обновить();
		Элементы.Цели.Обновить();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСтрокиЗависимыхЦП(Цель)
	Если Элементы.Цели.ТекущиеДанные <> Неопределено Тогда 
		ПараметрыОтбора = Новый Структура("Цель", Цель);
		Элементы.ЗависимыеЦелевыеПоказатели.ОтборСтрок = Новый ФиксированнаяСтруктура(ПараметрыОтбора);	
		
		Элементы.ЗависимыеЦелевыеПоказатели.Обновить();
		Элементы.Цели.Обновить();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//найдем цели без зависимых целевых показателей
	Для каждого Стр Из Объект.Цели Цикл
		Структура = Новый Структура("Цель", Стр.Цель);
		ЗависимыеЦП = Объект.ЗависимыеЦелевыеПоказатели.НайтиСтроки(Структура);
		Если ЗависимыеЦП.Количество() = 0 Тогда
			Сообщить("Для цели """ + Стр.Цель + """ не выбраны зависимые целевые показатели");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла; 
	
	
	//проверим задвоенные строки в списке зависимых целевых показателей
	Для каждого Стр Из Объект.ЗависимыеЦелевыеПоказатели Цикл
		Структура = Новый Структура;
		Структура.Вставить("Цель", Стр.Цель);
		Структура.Вставить("ЦелевойПоказатель", Стр.ЦелевойПоказатель);
		//Для НомерАналитики = 1 по 5 Цикл
		//	Структура.Вставить("Аналитика" + НомерАналитики, Стр["Аналитика" + НомерАналитики]);
		//КонецЦикла;
		Структура.Вставить("КлючАналитики", Стр.КлючАналитики);
		Структура.Вставить("ОтборПоСтруктуреКомпании", Стр.ОтборПоСтруктуреКомпании);
		
		ОдинакЗависимЦП = Объект.ЗависимыеЦелевыеПоказатели.НайтиСтроки(Структура);
		Если ОдинакЗависимЦП.Количество() > 1 Тогда
			Сообщить("Найдены одинаковые строки с целевым показателем """ + Стр.ЦелевойПоказатель + """ для цели """ + Стр.Цель + """");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	//проверим суммы весов для каждой цели
	Для каждого СтрЦель Из Объект.Цели Цикл
		СуммаВесов = 0;
		Для каждого СтрЦП Из Объект.ЗависимыеЦелевыеПоказатели Цикл
			Если СтрЦП.Цель = СтрЦель.Цель Тогда 
				СуммаВесов = СуммаВесов + СтрЦП.Вес;
			КонецЕсли;
		КонецЦикла;
		
		Если СуммаВесов <> 100 Тогда
			Сообщить("Сумма весов зависимых целевых показателей для цели """ + СтрЦель.Цель + """ должна быть 100%");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗависимыеЦелевыеПоказателиЦелевойПоказательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Цели.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия =  Новый Структура("Цель", ТекущиеДанные.Цель);
		ОткрытьФорму("Справочник.KPI_ЦелевыеПоказатели.Форма.ФормаВыбораДляСоответствияСЦелью",ПараметрыОткрытия, Элементы.ЗависимыеЦелевыеПоказатели);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗависимыеЦелевыеПоказателиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение.Форма = "ФормаВыбораДляСоответствияСЦелью" Тогда
		Элемент.ТекущиеДанные.ЦелевойПоказатель = ВыбранноеЗначение.ЦП;
		Элемент.ТекущиеДанные.Цель = Элементы.Цели.ТекущиеДанные.Цель;
	КонецЕсли;
		
	Если ВыбранноеЗначение.Форма = "KPI_ФормаСпискаСтруктураКомпании" Тогда
		Элемент.ТекущиеДанные.НазваниеОтбораПоСтруктуреКомпании = ВыбранноеЗначение.СЗ;
		Элемент.ТекущиеДанные.ОтборПоСтруктуреКомпании = СписЗначВСтр(ВыбранноеЗначение.СЗ);
	КонецЕсли;	
КонецПроцедуры


&НаСервере
Функция СписЗначВСтр(Значение)
	Возврат ЗначениеВСтрокуВнутр(Значение);
КонецФункции


&НаСервере
Функция СтрВСписЗнач(Стр)
	Возврат ?(ПустаяСтрока(Стр), Новый СписокЗначений, ЗначениеИзСтрокиВнутр(Стр));
КонецФункции


&НаКлиенте
Процедура УдалитьЦель(Команда)
	Если Элементы.Цели.ТекущиеДанные <> Неопределено Тогда
		УдалитьЦельИПодчиненныеСтроки(Элементы.Цели.ТекущиеДанные.Цель);
		
		Элементы.ЗависимыеЦели.Обновить();
		Элементы.ЗависимыеЦелевыеПоказатели.Обновить();
		Элементы.Цели.Обновить();
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура УдалитьЦельИПодчиненныеСтроки(ТекЦель)
	НачатьТранзакцию();
	
	//удалим цели
	ц = 0;
	Пока ц < Объект.Цели.Количество() Цикл
		Если Объект.Цели.Получить(ц).Цель = ТекЦель Тогда
			Объект.Цели.Удалить(ц);
		Иначе 
			ц = ц + 1;	
		КонецЕсли;
	КонецЦикла;
	
	//удалим зависимые цели
	н = 0;
	Пока н < Объект.ЗависимыеЦели.Количество() Цикл
		Если Объект.ЗависимыеЦели.Получить(н).Цель = ТекЦель Тогда
			Объект.ЗависимыеЦели.Удалить(н);
		Иначе 
			н = н + 1;	
		КонецЕсли;
	КонецЦикла;
	
	//удалим зависимые целевые показатели
	к = 0;
	Пока к < Объект.ЗависимыеЦелевыеПоказатели.Количество() Цикл
		Если Объект.ЗависимыеЦелевыеПоказатели.Получить(к).Цель = ТекЦель Тогда
			Объект.ЗависимыеЦелевыеПоказатели.Удалить(к);
		Иначе 
			к = к + 1;	
		КонецЕсли;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры


&НаКлиенте
Процедура ЦелиЦельОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//проверим на повторный выбор уже выбранного значения
	Структура = Новый Структура("Цель", ВыбранноеЗначение);
	
	ПовторяющаясяЦель = Объект.Цели.НайтиСтроки(Структура);
	
	Если ПовторяющаясяЦель.Количество() > 0 Тогда
		Сообщить("Цель """ + ВыбранноеЗначение + """ уже существует в списке целей");
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЗависимыеЦелиЗависимаяЦельОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//проверим нахождение выбранной цели в списке зависимых целей
	Если Элементы.Цели.ТекущиеДанные.Цель = ВыбранноеЗначение Тогда
		Сообщить("Нельзя добавить цель в список зависимых целей, т.к. она не может быть зависима сама себе");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	
	//проверим на повторный выбор уже выбранного значения
	Структура = Новый Структура;
	Структура.Вставить("Цель", Элементы.Цели.ТекущиеДанные.Цель);
	Структура.Вставить("ЗависимаяЦель", ВыбранноеЗначение);
	
	ПовторяющаясяЗависимаяЦель = Объект.ЗависимыеЦели.НайтиСтроки(Структура);
	Если ПовторяющаясяЗависимаяЦель.Количество() > 0 Тогда
		Сообщить("Зависимая цель """ + ВыбранноеЗначение + """ уже существует в списке зависимых целей");
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СтруктураКомпанииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	KPI_ОбщегоНазначения.ОбработкаВыбораПолучитьСтруктуруКомпанииНаДату(Объект.Дата, ЭтаФорма, СтандартнаяОбработка);
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Объект.СтруктураКомпании = ВыбранноеЗначение.СтруктураКомпании;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗависимыеЦелевыеПоказателиНазваниеФильтраАналитикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекДан = Элементы.ЗависимыеЦелевыеПоказатели.ТекущиеДанные;
	KPI_ИнтерфейсКлиент.НачалоВыбораАналитик(ТекДан.ЦелевойПоказатель, ТекДан.КлючАналитики, ТекДан.НаименованиеФильтраАналитик, Элемент, СтандартнаяОбработка);
КонецПроцедуры
                   
&НаКлиенте
Процедура ЗависимыеЦелевыеПоказателиНазваниеОтбораПоСтруктуреКомпанииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ", "ВзаимосвязьЦелей");
	СтруктураПараметров.Вставить("Дата", Объект.Дата);
	СтруктураПараметров.Вставить("Список", СтрВСписЗнач(Элементы.ЗависимыеЦелевыеПоказатели.ТекущиеДанные.ОтборПоСтруктуреКомпании));
	
	Форма = ПолучитьФорму("ОбщаяФорма.KPI_ФормаСпискаСтруктураКомпании", СтруктураПараметров, Элементы.ЗависимыеЦелевыеПоказатели);
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗависимыеЦелевыеПоказателиНазваниеФильтраАналитикОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.ЗависимыеЦелевыеПоказатели.ТекущиеДанные.КлючАналитики = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗависимыеЦелевыеПоказателиЦелевойПоказательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.KPI_ЦелевыеПоказатели.СмартЗадача") Или ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.KPI_ЦелевыеПоказатели.Стандарт") Тогда
		Сообщить("Запрещено выбирать предопределенный целевой показатель ""СмартЗадача"" или ""Стандарт""");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗависимыеЦелевыеПоказателиНазваниеФильтраАналитикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ТекущиеДанные = Элементы.ЗависимыеЦелевыеПоказатели.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранноеЗначение);
	КонецЕсли;
		
КонецПроцедуры




