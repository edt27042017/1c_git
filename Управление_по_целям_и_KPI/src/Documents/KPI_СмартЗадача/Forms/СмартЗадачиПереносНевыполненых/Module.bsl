
&НаКлиенте
Процедура ПеренестиЗадачи(Команда)
	
	КопироватьЗадачи = Ложь;
	ТекстВопроса = "Оставить задачи в текущем периоде?";
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КопироватьЗадачи = Истина;
	КонецЕсли;
	ПеренестиЗадачиСервер(КопироватьЗадачи);
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиЗадачиСервер(КопироватьЗадачи)
	
	Документы.KPI_СмартЗадача.ПеренестиСмартЗадачи(СмартЗадачи.Выгрузить(),КопироватьЗадачи);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Дата",Дата) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Параметры.Свойство("ПериодичностьПланирования",ПериодичностьПланирования) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Параметры.Свойство("ОбъектУправления",ОбъектУправления) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	
	Заголовок = "Переносимые задачи за " +KPI_ИнтерфейсВызовСервера.ПредставлениеПериодаПланирования(Дата,ПериодичностьПланирования); 
	
	ФильтрГруппы = Неопределено;
	Параметры.Свойство("ФильтрГруппы",ФильтрГруппы);
	
	ВыборкаЗадач = KPI_ОбщегоНазначенияСервер.ПолучитьСмартЗадачи(Дата, ПериодичностьПланирования,
	ОбъектУправления, ФильтрГруппы,
	Истина,Истина,Ложь);
	
	НовыйСрокВыполнения = KPI_ИнтерфейсКлиентСервер.ПолучитьДатуВСледующемПериоде(Дата,ПериодичностьПланирования,1);
	
	Пока ВыборкаЗадач.Следующий() Цикл
		СтрокаСмартЗадачи = СмартЗадачи.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСмартЗадачи,ВыборкаЗадач);
		СтрокаСмартЗадачи.Перенести = Истина;
		СтрокаСмартЗадачи.НовыйСрокИсполнения = НовыйСрокВыполнения;
	КонецЦикла;
	
КонецПроцедуры
