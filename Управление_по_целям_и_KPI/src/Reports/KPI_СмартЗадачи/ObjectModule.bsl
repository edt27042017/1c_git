
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеРасшифровки    = Неопределено;
	ДокументРезультат.Очистить();
	ДокументРезультат.Автомасштаб = Истина;
	Настройки = КомпоновщикНастроек.Настройки;
	
	ПараметрыДанных  = Настройки.ПараметрыДанных;
	НачалоПериода    = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода")).Значение;
	КонецПериода     = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода")).Значение;
	ОбъектУправления = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОбъектУправления")).Значение;
	
	ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода",НачалоДня(НачалоПериода));
	ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериода",КонецДня(КонецПериода));
	//ПараметрыДанных.УстановитьЗначениеПараметра("ОбъектУправления",ОбъектУправления);
	//ПараметрыДанных.УстановитьЗначениеПараметра("ПериодичностьПланирования",ПериодичностьПланирования);

	
	
	Сотрудник = KPI_ОбщегоНазначенияСервер.ПолучитьПредставлениеПоСтруктуреКомпанииНаДату(ОбъектУправления,КонецПериода);
	
	ФорматнаяСтрокаДат = "ДФ=dd.MM.yyyy";
	НачалоПериодаПредставление      = Формат(НачалоПериода,ФорматнаяСтрокаДат);
	КонецПериодаПредставление       = Формат(КонецПериода,ФорматнаяСтрокаДат);
	
	ОбщиеОбласти       = ПолучитьОбщийМакет("KPI_ОбщиеОбластиОтчетов");
	ОбластьЗаголовок   = ОбщиеОбласти.ПолучитьОбласть("ОбластьЗаголовок");
	
	ОбластьПробел      = ОбщиеОбласти.ПолучитьОбласть("ОбластьПробел");
	
	Заголовок         = "Отчет по смарт задачам											
	|сотрудника %Сотрудник%
	|за %НачалоПериода% - %КонецПериода%";
	
	Заголовок = СтрЗаменить(Заголовок,"%НачалоПериода%",НачалоПериодаПредставление);
	Заголовок = СтрЗаменить(Заголовок,"%КонецПериода%" ,КонецПериодаПредставление);
	Заголовок = СтрЗаменить(Заголовок,"%Сотрудник%"    ,Сотрудник);
	
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = Заголовок;
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	Компоновщик     = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = Компоновщик.Выполнить(СхемаКомпоновкиДанных,Настройки,ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	ДокументРезультат.Вывести(ОбластьПробел);
	ДокументРезультат.Вывести(ОбластьПробел);
	
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.НачатьВывод();
	Пока   Истина           Цикл
		ЭлементКомпоновки =	ПроцессорКомпоновки.Следующий();
		Если ЭлементКомпоновки = Неопределено Тогда
			Прервать;
		КонецЕсли;
		ПроцессорВывода.ВывестиЭлемент(ЭлементКомпоновки);
		УстановитьФлажок(ДокументРезультат,ДанныеРасшифровки,ЭлементКомпоновки,"Утверждена","%Утверждена%");
		УстановитьФлажок(ДокументРезультат,ДанныеРасшифровки,ЭлементКомпоновки,"Выполнена","%Выполнена%");
		УстановитьФлажок(ДокументРезультат,ДанныеРасшифровки,ЭлементКомпоновки,"Проверена","%Проверена%");
		
		
	КонецЦикла;
	ПроцессорВывода.ЗакончитьВывод();
	
	KPI_ИнтерфейсВызовСервера.ДобавитьПодписьСформированногоОтчета(ДокументРезультат,КонецПериода);
		
КонецПроцедуры

Процедура УстановитьФлажок(ДокументРезультат,ДанныеРасшифровки,ЭлементКомпоновки,ПолеПоКоторомуНеобходимоПолучитьЗначение,ПредставлениеСКД)
	
	Если ЭлементКомпоновки.ЗначенияПараметров.Количество() Тогда
		 ЗначениеВыводимыхДанных = Неопределено;
		 Для Каждого ЗначениеПараметра из ЭлементКомпоновки.ЗначенияПараметров Цикл
			Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
					ПоляРасшифровки = ДанныеРасшифровки.Элементы[ЗначениеПараметра.Значение].ПолучитьПоля();
					Для Каждого ПолеРасшифровки из ПоляРасшифровки Цикл
						Если ПолеРасшифровки.Поле = ПолеПоКоторомуНеобходимоПолучитьЗначение Тогда
							ЗначениеВыводимыхДанных = ПолеРасшифровки.Значение;
							Прервать;
						КонецЕсли;	
					КонецЦикла;	
				КонецЕсли;	 
		 КонецЦикла;
		 
		 
		 Если ЗначениеЗаполнено(ЗначениеВыводимыхДанных) Тогда
				Рис = ДокументРезультат.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
				Рис.РазмерКартинки = РазмерКартинки.АвтоРазмер;
				//Рис.Линия          =  Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии); 
				Рис.ЦветЛинии      = ЦветаСтиля.ЦветЛинииОтчета;
				Индекс             = ДокументРезультат.Рисунки.Индекс(Рис);
				Если ЗначениеВыводимыхДанных = ПредставлениеСКД Тогда
					ДокументРезультат.Рисунки[Индекс].Картинка = БиблиотекаКартинок.KPI_Флажок;
				Иначе
					ДокументРезультат.Рисунки[Индекс].Картинка = Неопределено;
				КонецЕсли;	
				ВысотаТабДок = ДокументРезультат.ВысотаТаблицы; ///????
				ОбластьДляКартинки = ДокументРезультат.НайтиТекст(ПредставлениеСКД);
				Если НЕ ОбластьДляКартинки  = Неопределено Тогда
					ДокументРезультат.Рисунки[Индекс].Расположить(ОбластьДляКартинки);	
					ОбластьДляКартинки.Текст = "";
				КонецЕсли;
			КонецЕсли;
		 
	КонецЕсли;
	
	
КонецПроцедуры
