//Функция получает список Смарт-задач
//Параметры
// КомпоновщикНастроек - тип КомпоновщикНастроекСистемыКомпоновкиДанных
// Параметры           - тип структура
//Возвращаемое значение
// тип таблица значений
Функция СмартЗадачи(КомпоновщикНастроек,Параметры) Экспорт 	
	
	СхемаКомпоновкиДанных = Отчеты.KPI_ФормированиеСпискаСмартЗадач.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	 //заменить кусок запроса
	ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.СмартЗадачи.Запрос;
	
	КомпоновщикНастроек      = Неопределено;
	СтатусОбъектаУправления	 = Неопределено;
	ОбъектУправления         = Неопределено;
	
	Если НЕ Параметры.Свойство("ОбъектУправления",ОбъектУправления) Тогда
		KPI_ИнтерфейсКлиентСервер.СообщитьОбОшибке("Не указан объект управления");
		Возврат Неопределено;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("СтатусОбъектаУправления",СтатусОбъектаУправления)Тогда
		KPI_ИнтерфейсКлиентСервер.СообщитьОбОшибке("Не указан статус объекта управления");
		Возврат Неопределено;
	КонецЕсли;
		
	Если НЕ Параметры.Свойство("КомпоновщикНастроек" ,КомпоновщикНастроек) Тогда
		
		КомпоновщикНастроек   = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
			
	КонецЕсли;
	
	ОтборКомпоновщика = КомпоновщикНастроек.Настройки.Отбор;
	
	Если Не Параметры.Свойство("КомпоновщикНастроек") Тогда
		
		KPI_ИнтерфейсКлиентСервер.УдалитьЭлементОтбораСписка(ОтборКомпоновщика,"ДатаВыполнения");
		KPI_ИнтерфейсКлиентСервер.УдалитьЭлементОтбораСписка(ОтборКомпоновщика,"ПериодичностьПланирования");
		
		
		Если Параметры.Свойство("Период") И Параметры.Свойство("ПериодичностьПланирования") Тогда 
			ГраницыПериода = KPI_ОбщегоНазначенияСервер.ГраницыПериода(Параметры.Период,Параметры.ПериодичностьПланирования);
			KPI_ИнтерфейсКлиентСервер.УстановитьЭлементОтбораСписка(ОтборКомпоновщика,"ДатаВыполнения",
			ГраницыПериода.КонецПериода,ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
			KPI_ИнтерфейсКлиентСервер.УстановитьЭлементОтбораСписка(ОтборКомпоновщика,"ДатаВыполнения",
			ГраницыПериода.НачалоПериода,ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
			KPI_ИнтерфейсКлиентСервер.УстановитьЭлементОтбораСписка(ОтборКомпоновщика,"ПериодичностьПланирования",
			Параметры.ПериодичностьПланирования);	
		ИначеЕсли Параметры.Свойство("Период")  Тогда
			KPI_ИнтерфейсКлиентСервер.УстановитьЭлементОтбораСписка(ОтборКомпоновщика,"ДатаВыполнения",
			Параметры.Период,Истина,ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);	
		ИначеЕсли Параметры.Свойство("ПериодичностьПланирования") Тогда
			KPI_ИнтерфейсКлиентСервер.УстановитьЭлементОтбораСписка(ОтборКомпоновщика,"ПериодичностьПланирования",
			Параметры.ПериодичностьПланирования);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВРег(СтатусОбъектаУправления) = "ВЛАДЕЛЕЦ" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И KPI_СмартЗадача.СтруктураКомпании = &ОбъектУправления";
	Иначе 
		//Выбираются все разрешенные к просмотру задачи
		ТекстЗапроса = ТекстЗапроса + "
		|	И НЕ KPI_СмартЗадача.СтруктураКомпании = &ОбъектУправления";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВЫБРАТЬ"," ВЫБРАТЬ РАЗРЕШЕННЫЕ ");
	КонецЕсли;

	Если Параметры.Свойство("Проверено") Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|	И НЕ KPI_СмартЗадача.Проверено";
		
	КонецЕсли;
	
	Если Параметры.Свойство("Утверждено") Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|	И НЕ KPI_СмартЗадача.Утверждено";
	
	КонецЕсли;
	
	
	Если Параметры.Свойство("Просрочено") Тогда
		
		ТекстЗапроса = ТекстЗапроса +" 
		| И KPI_СмартЗадача.ВыполнитьДо < &Период";
		
	КонецЕсли;
	
	ДнейДоВыполнения = Неопределено;
	Если Параметры.Свойство("ДнейДоВыполнения",ДнейДоВыполнения) Тогда
		
		ТекстЗапроса = ТекстЗапроса +" 
		| И РАЗНОСТЬДАТ(&Период, KPI_СмартЗадача.ВыполнитьДо, ДЕНЬ) = &ДнейДоВыполнения";
		
	КонецЕсли;
	
	ГруппаСмартЗадач = Неопределено;
	Если Параметры.Свойство("ГруппаСмартЗадач",ГруппаСмартЗадач) Тогда
		ТекстЗапроса = ТекстЗапроса +
		" 
		| И KPI_СмартЗадача.ГруппаСмартЗадач  = &ГруппаСмартЗадач";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + " 
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВыполнения";
	
    СхемаКомпоновкиДанных.НаборыДанных.СмартЗадачи.Запрос = ТекстЗапроса;
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период"          ,ТекущаяДата());
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОбъектУправления",ОбъектУправления);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДнейДоВыполнения",ДнейДоВыполнения);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ГруппаСмартЗадач",ГруппаСмартЗадач);
	
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;       
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,КомпоновщикНастроек.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	ВыводТЗ = новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = Новый ТаблицаЗначений;
	ВыводТЗ.УстановитьОбъект(Результат);
	ВыводТЗ.НачатьВывод();
	ВыводТЗ.Вывести(ПроцессорКомпоновкиДанных);
	ВыводТЗ.ЗакончитьВывод();
	Возврат Результат;
	
КонецФункции
